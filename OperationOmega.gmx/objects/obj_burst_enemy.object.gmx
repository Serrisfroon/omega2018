<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_burst</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_enemyenergy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set speed
speed = 12;
image_xscale = 2;
image_yscale = 2;
alarm[0] = 1;
amplified = 0;
sfx_play(snd_burst, x, y);
image_speed = 0
image_index = 0;
if(global.allycolor = c_red)
    image_index = 1;
    
    
//Set attack variable values
attack_damage = 5;          //Set the damage for the attack
attack_burst = 0;           //Set the bonus damage of the attack that ignores shield
attack_threshold = 0;       //Set the threshold reduction per hit
attack_shake = 0;           //Set the screen shake intensity of the attack
attack_name = "Burst";      //Set the name of the attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.allycolor != c_red)
{
    effect_create_above(ef_ring, x, y, 1, c_red);
}
else
{
    effect_create_above(ef_ring, x, y, 1, c_blue);
}
part_particles_create(obj_partsystem.system, x, y, obj_partsystem.burstsplit[global.team[mid]-1], 30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;
visible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check if the target point has been reached
if(point_distance(x, y, targetx, targety) &lt;= 10)
{
    sfx_play(snd_burstexplode, x, y);
 //Create smaller shots. Give them their direction.
 //Create the shot and give it speed and direction
 if(amplified = 0)
    for(i = 0; i &lt; 360; i += 22.49)
    {
        bullet_create(x, y, "Burst", direction+i, mid, 0);
    }
 else
    for(i = 0; i &lt; 360; i += 17.99)
    {
        bullet_create(x, y, "Burst", direction+i, mid, 0);
    }
 instance_destroy();
}
if(x &lt; 0 || x &gt; room_width || y &lt; 0 || y &gt; room_height)
{
 instance_destroy();
 exit;
}
if(obj_bulletcontrol.wallposition[floor(x/32), floor(y/32)] = true)
 instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>29,14</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>
