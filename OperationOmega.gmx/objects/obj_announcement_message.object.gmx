<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;

image_xscale = 0;
image_yscale = 0;
image_alpha = 0.2;
white_alpha = 1;
animation_step = 0;
message = "";
color = c_red;
announcement_y = 130;

secondary_scaling = 1;
secondary_alpha = 1;
trigger_second_message = 0;
second_messages = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation_step += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(animation_step)
{
    case 0:
        image_xscale += 0.1;
        image_yscale += 0.2;
        image_alpha += 0.08;
        white_alpha -= 0.1;
        if(image_yscale = 1)
            animation_step++;
    break;
    case 1:
        image_xscale += 0.1;
        image_alpha += 0.08;
        white_alpha -= 0.1;
        if(image_xscale = 1)
        {
            alarm[1] = 20;
            animation_step += 1;
            image_alpha = 2;
        }
    break;
    case 3:
        image_alpha -= 0.015;
        announcement_y -= 0.3;
        if(image_alpha &lt;= 1)
        {
            image_xscale -= 0.0025;
            image_yscale -= 0.0025;
        }
        if(image_alpha &lt;= 0)
            instance_destroy();
    break;
}

if(trigger_second_message &lt; second_messages)
{
    if(secondary_scaling &gt; 1-second_messages*0.3)
    {
        secondary_scaling -= 0.025;
        secondary_alpha -= 0.025;
        announcement_y -= 4;
    }
    else
        trigger_second_message += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //draw_text_bordered(x, y, string, xscale, yscale, border size, border color, inner color);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_bigtext);

draw_set_alpha(image_alpha*secondary_alpha);
draw_text_bordered_xy(view_wport[0]/2, announcement_y, message, image_xscale*secondary_scaling, image_yscale*secondary_scaling, 2, color, c_white);
    
draw_set_alpha(white_alpha*secondary_alpha);
draw_text_bordered_xy(view_wport[0]/2, announcement_y, message, image_xscale*secondary_scaling, image_yscale*secondary_scaling, 2, c_white, c_white);

draw_set_halign(fa_left);
draw_set_valign(fa_top);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
