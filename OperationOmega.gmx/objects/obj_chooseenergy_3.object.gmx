<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fusion_icon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>spr_needle_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This slot is not selected
growth = 0;
growing = 0;
selected = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> selected = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Handle map display growing
if(growing = 1 &amp;&amp; growth &lt; 1)
 growth += 0.1;
if(growing = 0 &amp;&amp; growth &gt; 0)
 growth -= 0.1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 0;
alarm[3] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
alarm[3] = 20;
growing = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room = rm_profile)
{
 global.spacehot = 3;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_hotkey, 1, 0);
 exit;
}
//Exit if mod box is open
if(global.creatinggame = 1)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_hotkey, 1, 0);
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
 global.spacehot = 3;
else
{
 if(global.mymid = 0)
  send = obj_waiting;
 else
  send = obj_waiting_client;
 with(send)
 {
 //Send a message to your chat
 chatline[0] = chatline[1];
 chatcolor[0] = chatcolor[1];
 chatline[1] = chatline[2];
 chatcolor[1] = chatcolor[2];
 chatline[2] = chatline[3];
 chatcolor[2] = chatcolor[3];
 chatline[3] = chatline[4];
 chatcolor[3] = chatcolor[4];
 chatline[4] = chatline[5];
 chatcolor[4] = chatcolor[5];
 chatline[5] = chatline[6];
 chatcolor[5] = chatcolor[6];
 chatline[6] = chatline[7];
 chatcolor[6] = chatcolor[7];
 chatline[7] = chatline[8];
 chatcolor[7] = chatcolor[8];
 chatcolor[8] = c_red;
 chatline[8] = "You cannot configure your ship when ready.";
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//disable function if currently moving on a path
with(prnt_selection)
 if(path_speed &gt; 0)
  exit;
if(selected = 1 || global.tutorial = 1)
 exit;
//Exit if mod box is open
if(global.creatinggame = 1)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//return icons accordingly
if(obj_chooseprimary.selected = 1)
{
 obj_chooseprimary.selected = 0;
 with(obj_needle_icon)
  path_start(path_rfirstslot, 16, 0, 0);
 with(obj_sonic_icon)
  path_start(path_rprimary2, 16, 0, 0);
 with(obj_wave_icon)
  path_start(path_rprimary3, 16, 0, 0);
 with(obj_flank_icon)
  path_start(path_rprimary4, 16, 0, 0);
 with(obj_stasis_icon)
  path_start(path_rprimary5, 16, 0, 0);
 with(obj_crossfire_icon)
  path_start(path_rprimary6, 16, 0, 0);
 with(obj_siphon_icon)
  path_start(path_rprimary7, 16, 0, 0);
 with(obj_double_icon)
  path_start(path_rprimary8, 16, 0, 0);
 with(obj_pierce_icon)
  path_start(path_rprimary9, 16, 0, 0);
 with(obj_spread_icon)
  path_start(path_rprimary10, 16, 0, 0);
}
if(obj_chooseenergy_1.selected = 1)
{
 with(obj_fusion_icon)
  path_start(path_rfirstslot, 16, 0, 0);
 with(obj_stardust_icon)
  path_start(path_rprimary2, 16, 0, 0);
 with(obj_barrier_icon)
  path_start(path_rprimary3, 16, 0, 0);
 with(obj_formation_icon)
  path_start(path_rprimary4, 16, 0, 0);
 with(obj_beam_icon)
  path_start(path_rprimary5, 16, 0, 0);
 with(obj_sparkline_icon)
  path_start(path_rprimary6, 16, 0, 0);
 with(obj_burst_icon)
  path_start(path_rprimary7, 16, 0, 0);
 with(obj_slash_icon)
  path_start(path_rprimary8, 16, 0, 0);
 with(obj_horizon_icon)
  path_start(path_rprimary9, 16, 0, 0);
 with(obj_spiral_icon)
  path_start(path_rprimary10, 16, 0, 0);
 with(obj_laser_icon)
  path_start(path_rprimary11, 16, 0, 0);
 with(obj_trail_icon)
  path_start(path_rprimary12, 16, 0, 0);
 with(obj_reflection_icon)
  path_start(path_rprimary13, 16, 0, 0);
 with(obj_storm_icon)
  path_start(path_rprimary14, 16, 0, 0);
 with(obj_trigger_icon)
  path_start(path_rprimary15, 16, 0, 0);
}
if(obj_chooseenergy_2.selected = 1)
{
 with(obj_fusion_icon)
  path_start(path_rshift1_1, 16, 0, 0);
 with(obj_stardust_icon)
  path_start(path_rfirstslot, 16, 0, 0);
 with(obj_barrier_icon)
  path_start(path_rprimary2, 16, 0, 0);
 with(obj_formation_icon)
  path_start(path_rprimary3, 16, 0, 0);
 with(obj_beam_icon)
  path_start(path_rprimary4, 16, 0, 0);
 with(obj_sparkline_icon)
  path_start(path_rshift1_2, 16, 0, 0);
 with(obj_burst_icon)
  path_start(path_rprimary6, 16, 0, 0);
 with(obj_slash_icon)
  path_start(path_rprimary7, 16, 0, 0);
 with(obj_horizon_icon)
  path_start(path_rprimary8, 16, 0, 0);
 with(obj_spiral_icon)
  path_start(path_rprimary9, 16, 0, 0);
 with(obj_laser_icon)
  path_start(path_rshift1_3, 16, 0, 0);
 with(obj_trail_icon)
  path_start(path_rprimary11, 16, 0, 0);
 with(obj_reflection_icon)
  path_start(path_rprimary12, 16, 0, 0);
 with(obj_storm_icon)
  path_start(path_rprimary13, 16, 0, 0);
 with(obj_trigger_icon)
  path_start(path_rprimary14, 16, 0, 0);
}
if(obj_chooseenergy_3.selected = 1)
{
 with(obj_fusion_icon)
  path_start(path_rshift2_1, 16, 0, 0);
 with(obj_stardust_icon)
  path_start(path_rshift1_1, 16, 0, 0);
 with(obj_barrier_icon)
  path_start(path_rfirstslot, 16, 0, 0);
 with(obj_formation_icon)
  path_start(path_rprimary2, 16, 0, 0);
 with(obj_beam_icon)
  path_start(path_rprimary3, 16, 0, 0);
 with(obj_sparkline_icon)
  path_start(path_rshift2_2, 16, 0, 0);
 with(obj_burst_icon)
  path_start(path_rshift1_2, 16, 0, 0);
 with(obj_slash_icon)
  path_start(path_rprimary6, 16, 0, 0);
 with(obj_horizon_icon)
  path_start(path_rprimary7, 16, 0, 0);
 with(obj_spiral_icon)
  path_start(path_rprimary8, 16, 0, 0);
 with(obj_laser_icon)
  path_start(path_rshift2_3, 16, 0, 0);
 with(obj_trail_icon)
  path_start(path_rshift1_3, 16, 0, 0);
 with(obj_reflection_icon)
  path_start(path_rprimary11, 16, 0, 0);
 with(obj_storm_icon)
  path_start(path_rprimary12, 16, 0, 0);
 with(obj_trigger_icon)
  path_start(path_rprimary13, 16, 0, 0);
}
if(obj_choosedeploy_1.selected = 1 || obj_choosedeploy_2.selected = 1 || obj_choosedeploy_3.selected = 1)
{
with(obj_dualmissile_icon)
 path_start(path_rshift4_1, 16, 0, 0);
with(obj_layermissile_icon)
 path_start(path_rshift3_1, 16, 0, 0);
with(obj_locustmissile_icon)
 path_start(path_rshift2_1, 16, 0, 0);
with(obj_tridentmissile_icon)
 path_start(path_rshift1_1, 16, 0, 0);
with(obj_shockmissile_icon)
 path_start(path_rfirstslot, 16, 0, 0);
with(obj_hermitmissile_icon)
 path_start(path_rshift4_2, 16, 0, 0);
with(obj_splitmissile_icon)
 path_start(path_rshift3_2, 16, 0, 0);
with(obj_strikemissile_icon)
 path_start(path_rshift2_2, 16, 0, 0);
with(obj_huntermine_icon)
 path_start(path_rshift1_2, 16, 0, 0);
with(obj_phantommine_icon)
 path_start(path_rprimary6, 16, 0, 0);
with(obj_hackermine_icon)
 path_start(path_rshift4_3, 16, 0, 0);
with(obj_clustermine_icon)
 path_start(path_rshift3_3, 16, 0, 0);
with(obj_strikemine_icon)
 path_start(path_rshift2_3, 16, 0, 0);
with(obj_solus_icon)
 path_start(path_rshift1_3, 16, 0, 0);
with(obj_turret_icon)
 path_start(path_rprimary11, 16, 0, 0);
}
//Disselect all other slots
with(prnt_selection) selected = 0;
//Select this slot
if(room = rm_profile)
{
 tile = instance_create(x, y, obj_fusion_icon);
 with(tile)
  path_start(path_shift2_1, 8, 0, 0);
 tile = instance_create(x, y, obj_stardust_icon);
 with(tile)
  path_start(path_shift1_1, 8, 0, 0);
 tile = instance_create(x, y, obj_barrier_icon);
 with(tile)
  path_start(path_firstslot, 8, 0, 0);
 tile = instance_create(x, y, obj_formation_icon);
 with(tile)
  path_start(path_primary2, 8, 0, 0);
 tile = instance_create(x, y, obj_beam_icon);
 with(tile)
  path_start(path_primary3, 8, 0, 0);
 tile = instance_create(x, y, obj_sparkline_icon);
 with(tile)
  path_start(path_shift2_2, 8, 0, 0);
 tile = instance_create(x, y, obj_burst_icon);
 with(tile)
  path_start(path_shift1_2, 8, 0, 0);
 tile = instance_create(x, y, obj_slash_icon);
 with(tile)
  path_start(path_primary6, 8, 0, 0);
 tile = instance_create(x, y, obj_horizon_icon);
 with(tile)
  path_start(path_primary7, 8, 0, 0);
 tile = instance_create(x, y, obj_spiral_icon);
 with(tile)
  path_start(path_primary8, 8, 0, 0);
 tile = instance_create(x, y, obj_laser_icon);
 with(tile)
  path_start(path_shift2_3, 8, 0, 0);
 tile = instance_create(x, y, obj_trail_icon);
 with(tile)
  path_start(path_shift1_3, 8, 0, 0);
 tile = instance_create(x, y, obj_reflection_icon);
 with(tile)
  path_start(path_primary11, 8, 0, 0);
 tile = instance_create(x, y, obj_storm_icon);
 with(tile)
  path_start(path_primary12, 8, 0, 0);
 tile = instance_create(x, y, obj_trigger_icon);
 with(tile)
  path_start(path_primary13, 8, 0, 0);
 alarm[2] = 1;
 exit;
}
if(room != rm_waiting)
{
 tile = instance_create(xstart, ystart, obj_fusion_icon);
 with(tile)
  path_start(path_shift2_1, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_stardust_icon);
 with(tile)
  path_start(path_shift1_1, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_barrier_icon);
 with(tile)
  path_start(path_firstslot, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_formation_icon);
 with(tile)
  path_start(path_primary2, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_beam_icon);
 with(tile)
  path_start(path_primary3, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_sparkline_icon);
 with(tile)
  path_start(path_shift2_2, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_burst_icon);
 with(tile)
  path_start(path_shift1_2, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_slash_icon);
 with(tile)
  path_start(path_primary6, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_horizon_icon);
 with(tile)
  path_start(path_primary7, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_spiral_icon);
 with(tile)
  path_start(path_primary8, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_laser_icon);
 with(tile)
  path_start(path_shift2_3, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_trail_icon);
 with(tile)
  path_start(path_shift1_3, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_reflection_icon);
 with(tile)
  path_start(path_primary11, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_storm_icon);
 with(tile)
  path_start(path_primary12, 8, 0, 0);
 tile = instance_create(xstart, ystart, obj_trigger_icon);
 with(tile)
  path_start(path_primary13, 8, 0, 0);
 alarm[2] = 1;
 exit;
}
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
{
 tile = instance_create(x, y, obj_fusion_icon);
 with(tile)
  path_start(path_shift2_1, 8, 0, 0);
 tile = instance_create(x, y, obj_stardust_icon);
 with(tile)
  path_start(path_shift1_1, 8, 0, 0);
 tile = instance_create(x, y, obj_barrier_icon);
 with(tile)
  path_start(path_firstslot, 8, 0, 0);
 tile = instance_create(x, y, obj_formation_icon);
 with(tile)
  path_start(path_primary2, 8, 0, 0);
 tile = instance_create(x, y, obj_beam_icon);
 with(tile)
  path_start(path_primary3, 8, 0, 0);
 tile = instance_create(x, y, obj_sparkline_icon);
 with(tile)
  path_start(path_shift2_2, 8, 0, 0);
 tile = instance_create(x, y, obj_burst_icon);
 with(tile)
  path_start(path_shift1_2, 8, 0, 0);
 tile = instance_create(x, y, obj_slash_icon);
 with(tile)
  path_start(path_primary6, 8, 0, 0);
 tile = instance_create(x, y, obj_horizon_icon);
 with(tile)
  path_start(path_primary7, 8, 0, 0);
 tile = instance_create(x, y, obj_spiral_icon);
 with(tile)
  path_start(path_primary8, 8, 0, 0);
 tile = instance_create(x, y, obj_laser_icon);
 with(tile)
  path_start(path_shift2_3, 8, 0, 0);
 tile = instance_create(x, y, obj_trail_icon);
 with(tile)
  path_start(path_shift1_3, 8, 0, 0);
 tile = instance_create(x, y, obj_reflection_icon);
 with(tile)
  path_start(path_primary11, 8, 0, 0);
 tile = instance_create(x, y, obj_storm_icon);
 with(tile)
  path_start(path_primary12, 8, 0, 0);
 tile = instance_create(x, y, obj_trigger_icon);
 with(tile)
  path_start(path_primary13, 8, 0, 0);
 alarm[2] = 1;
}
else
{
  if(global.mymid = 0)
  send = obj_waiting;
 else
  send = obj_waiting_client;
 with(send)
 {
 //Send a message to your chat
 chatline[0] = chatline[1];
 chatcolor[0] = chatcolor[1];
 chatline[1] = chatline[2];
 chatcolor[1] = chatcolor[2];
 chatline[2] = chatline[3];
 chatcolor[2] = chatcolor[3];
 chatline[3] = chatline[4];
 chatcolor[3] = chatcolor[4];
 chatline[4] = chatline[5];
 chatcolor[4] = chatcolor[5];
 chatline[5] = chatline[6];
 chatcolor[5] = chatcolor[6];
 chatline[6] = chatline[7];
 chatcolor[6] = chatcolor[7];
 chatline[7] = chatline[8];
 chatcolor[7] = chatcolor[8];
 chatcolor[8] = c_red;
 chatline[8] = "You cannot configure your ship when ready.";
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If this slot is selected, highlight it
if(selected = 1)
 draw_sprite_ext(spr_numbers_selected, 1, x, y, 1, 1, 0, c_white, image_alpha);
//Display the correct icon in this slot
switch(global.esecond[3])
{
 case 0:
      draw_sprite_ext(spr_numbers_icon, 6, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 1:
      draw_sprite_ext(spr_fusion_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 2:
      draw_sprite_ext(spr_stardust_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 3:
      draw_sprite_ext(spr_barrier_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 4:
      draw_sprite_ext(spr_beam_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 5:
      draw_sprite_ext(spr_formation_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 6:
      draw_sprite_ext(spr_sparkline_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 7:
      draw_sprite_ext(spr_burst_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 8:
      draw_sprite_ext(spr_slash_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 9:
      draw_sprite_ext(spr_horizon_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 10:
      draw_sprite_ext(spr_spiral_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 11:
      draw_sprite_ext(spr_laser_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 12:
      draw_sprite_ext(spr_trail_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 13:
      draw_sprite_ext(spr_reflection_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 14:
      draw_sprite_ext(spr_storm_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 15:
      draw_sprite_ext(spr_trigger_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
}
draw_sprite_ext(spr_numbers_icon, 2, x, y, 1, 1, 0, c_white, image_alpha);
if(global.spacehot = 3)
 draw_sprite_ext(spr_numbers_icon, 5, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_weapons_infos, 1, x+12, y+12, growth, growth, 0, c_white, 0.6*growth+0.2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(growing != 0)
draw_sprite_ext(spr_icon_select, image_index, x, y, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
