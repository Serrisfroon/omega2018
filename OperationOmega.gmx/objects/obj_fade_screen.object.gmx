<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize the variable used to transition from the room to the game results by fading the screen to black
transition_fade_to_black_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_interpolation(false);

//Increase the fade alpha until it's opaque
transition_fade_to_black_alpha += 0.04;
if(transition_fade_to_black_alpha &gt;= 1)
    room_goto(rm_aftermatch);       //Go to the postgame room once the screen is opaque

//Draw the screen fade effect
draw_set_alpha(transition_fade_to_black_alpha);
draw_set_color(c_black);
draw_rectangle(-30, -30, view_wport[0]+30, view_hport[0]+30, 0);

//Draw the cursor
var scaling_ratio = obj_mod.screen_scaling_ratio
draw_sprite_ext(spr_cursor, 0, (mouse_x-view_xview[0])/scaling_ratio, (mouse_y-view_yview[0])/scaling_ratio, 0.7, 0.7, obj_mod.cursor_rotation[1], c_white, 0.7);
draw_sprite_ext(spr_cursor, 1, (mouse_x-view_xview[0])/scaling_ratio, (mouse_y-view_yview[0])/scaling_ratio, 0.7, 0.7, obj_mod.cursor_rotation[2], c_white, 0.7);
draw_sprite_ext(spr_cursor, 2, (mouse_x-view_xview[0])/scaling_ratio, (mouse_y-view_yview[0])/scaling_ratio, 0.7, 0.7, obj_mod.cursor_rotation[3], c_white, 0.7);
texture_set_interpolation(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
