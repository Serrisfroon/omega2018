<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_beam</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_enemyenergy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>emit = part_emitter_create(obj_partsystem.system);
//Start with the beam unseen
scale = 0;
//Initialize stage variable
stage = 0;
alarm[0] = 1;
sfx_play(snd_beam, x, y);
image_yscale = 0;
image_xscale = 6;
stream = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_destroy(obj_partsystem.system, emit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_region(obj_partsystem.system, emit, x, x+lengthdir_x(1536, direction), y, y+lengthdir_y(1536, direction), ps_shape_line, ps_distr_linear);
part_emitter_burst(obj_partsystem.system, emit, obj_partsystem.beamspark[irandom(2)], 18);
stream = 1;
flare = instance_create(x, y, obj_beamflare);
flare.mid = mid;
flare.direction = direction;
flare.image_angle = direction;
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Widen the beam until its max size
if(scale &lt; 1 &amp;&amp; stage = 0)
    scale += 0.1;
image_yscale = scale;
if(stream = 1)
{
    coloring = irandom(2);
    part_type_direction(obj_partsystem.beamline[coloring], direction, direction, 0, 0);
    part_type_orientation(obj_partsystem.beamline[coloring],direction,direction,0,0,0);
    part_emitter_burst(obj_partsystem.system, emit, obj_partsystem.beamspark[coloring], 18);
    part_particles_create(obj_partsystem.system, x+lengthdir_x(-30*image_yscale+random(60*image_yscale), direction-90), y+lengthdir_y(-30*image_yscale+random(60*image_yscale), direction-90), obj_partsystem.beamline[coloring], 1);
}
//When at max size, check for collisions
if(scale = 1 &amp;&amp; stage = 0)
{
    //Check right side of beam
    beamed = collision_line(x+lengthdir_x(24, direction-90), y+lengthdir_y(24, direction-90), x+lengthdir_x(24, direction-90)+lengthdir_x(1536, direction), y+lengthdir_y(24, direction-90)+lengthdir_y(1536, direction), prnt_ally, 1, 1);
    //Check if there was a collision
    if(beamed &lt;0)
        //If there wasn't, check the left side
        beamed = collision_line(x+lengthdir_x(24, direction+90), y+lengthdir_y(24, direction+90), x+lengthdir_x(24, direction+90)+lengthdir_x(1536, direction), y+lengthdir_y(24, direction+90)+lengthdir_y(1536, direction), prnt_ally, 1, 1);
    //Check if there was a collision
    if(beamed &lt;0)
        //If there wasn't, check the center
        beamed = collision_line(x, y, x+lengthdir_x(1536, direction), y+lengthdir_y(1536, direction), prnt_ally, 1, 1);
    //Check if there was a collision and that it was your ship and not an error checker
    if(beamed &gt;= 0 &amp;&amp; beamed != obj_deadship &amp;&amp; beamed != obj_ship_placeholder)
    {
        if(beamed.object_index = obj_turret)
        {
            //Do the following to the ship that was hit
            with(beamed)
            {
                armor -= 20;
                //Shake the screen if in range
                if(point_distance(x, y, obj_ship.x, obj_ship.y) &lt; view_wview[0]/2)
                    obj_mod.viewpos = 4;
                part_particles_create(obj_partsystem.system, x, y, obj_partsystem.beamhit, 30);
            }
        }
        if(beamed.object_index = obj_ship)
            if(beamed.beserk = 0)
                //Do the following to the ship that was hit
                with(beamed)
                {
                    //Check if there's a nearby paladin turret
                    var shielded, shielddown;
                    shielded = 1;
                    if(instance_exists(obj_turret))
                        if(distance_to_object(instance_nearest(x, y, obj_turret)) &lt; 400)
                            shielded = 2;
                    shielddown = 1;
                    if(shield = 0)
                        shielddown = 0;

                    //Take damage
                    shield -= 60/shielded;
                    //If there is no more shield, transfer damage to armor
                    if(shield &lt; 0) 
                    {
                        armor += shield;
                        shield = 0;
                        if(shielddown = 1)
                            obj_mod.sendping = 0;

                    }
    
                    //If there is shield left, create effect
                    if(shield &gt; 0)
                    {
                        hurt = instance_create(0, 0, obj_hit);
                        hurt.hitdir = point_direction(x+lengthdir_x(16, direction), y+lengthdir_y(16, direction), other.xprevious, other.yprevious);
                        hurt.hurting = id;
                    }
                    part_particles_create(obj_partsystem.system, x, y, obj_partsystem.beamhit, 30);
    
                    //Update smoking
                    if(armor &lt;= (maxarmor*100)/60)
                        smoke = floor(armor/(maxarmor/10));
                    //Shake the screen if in range
                    if(point_distance(x, y, obj_ship.x, obj_ship.y) &lt; view_wview[0]/2)
                        obj_mod.viewpos = 8;
    
                    //Check if your ship has been defeated
                    if(armor &lt;= 0 &amp;&amp; beserk = 0)
                    {
                        //Take note of the player that defeated you
                        defeatmid = other.mid;
                        //Make a defeat message
                        if(global.ships &gt; 1)
                            random_message(global.othername[other.mid], global.name, "Beam");
                        else
                            message = global.othername[other.mid]+" ELIMINATED "+global.name+".(Beam)";
                        if(global.shipselect != 2)
                        {
                            //Destroy this object
                            instance_destroy();
                        }
                        else
                        {
                            armor = 0;
                            shield = 0;
                            beserk = 1;
                            energygain = 0.8;
                            energy = 100;
                            heat = 50;
                            cooldown = 1;
                            beserkeffect = instance_create(x, y, obj_beserkeffect);
                            alarm[11] = 300;
                        }
                    }      
                }
    }
    //Move to the next stage
    stage = 1;
}
//Decrease the size of the beam
if(scale &gt; 0 &amp;&amp; stage = 1)
    scale -= 0.1;
//Destroy the beam when it becomes invisible again
if(scale = 0 &amp;&amp; stage = 1)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_destroy(obj_partsystem.system, emit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,48</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
