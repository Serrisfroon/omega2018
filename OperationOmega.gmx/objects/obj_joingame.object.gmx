<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_menubutton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_joingame;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This game is from the games list
global.public_game = true;
//You are a client
global.master = false;
//Try connecting to the server
server = tcpconnect(global.connectip, 14800, true, 0);
//check if no connection was made
if(server &lt;= 0)
{
 //Inform the player
 show_message("Unable to connect to the server.");
 //A popup no longer exists
 global.popup_active = false;
 //Restart the room
 room_restart();
 exit;
}
//Wait two steps and proceed
alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the host tcp value
global.host = server;
setnagle(global.host, true);

//Wait for a reply from the host
var size;
while(true)
{
 size = receivemessage(global.host, 0, 0);
 if(size &gt; 0)
 {
  //Red what message has been sent
  check = readbyte(0);
  //Perform a different action dependant on the message
  switch(check)
  {
   //You are accepted into the game
   case CLIENT_ACCEPT:
        //Receive your mid(multiplayer ID)
        global.mymid = readbyte(0);
        //Get the number of current players and max players
        global.playercount = readbyte(0);
        global.maxplayers = readbyte(0);
        //Get put on the team with less people
        global.team[global.mymid] = readbyte(0);
        //Initialize UDP Connection on a new port
        global.udpsock = udpconnect(14811+global.mymid, true);
        //Get the new player's IP for UDP communication
        global.playerip = tcpip(server);
        //Decide a target port for the new player
        global.playerport = 14801+global.mymid;
   break;
   //You are rejected due to the game being full
   case CLIENT_REJECT:
        //close the tcp socket
        closesocket(server);
        //Stop 39dll
        dllfree();
        show_message("This game is currently full and cannot accept any more players.");
        //Restart 39dll
        dllinit(0,true,true);
        //Restart the room
        room_restart();
        exit;
   break;
   //You are rejected due to the game being in progress
   case CLIENT_UNABLE:
        //close the tcp socket
        closesocket(server);
        //Stop 39dll
        dllfree();
        show_message("This session is currently in game. Try again later.");
        //Restart 39dll
        dllinit(0,true,true);
        //Restart the room
        room_restart();
        exit;
   break;
  }
  break;
 }
}
//Attach your player number to your name
global.name = string_copy(global.myname, 0, 12);
//Set your name
global.othername[global.mymid] = global.name;
//Send information to the host
clearbuffer(0);
writebyte(12, 0);
writebyte(global.mymid, 0);
writebyte(global.team[global.mymid], 0);
writestring(global.name, 0);
writebyte(global.shipselect, 0);
sendmessage(global.host, 0, 0, 0);
//Move into waiting room
room_goto(rm_waiting);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Exit is a popup window exists
if(global.popup_active = true)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clicktext, 1, 0);

var newversion, vfile;
newversion = get_version();
if(VERSION_NUMBER != newversion &amp;&amp; newversion != "0")
{
    show_message("Operation Omega can now be updated to version "+newversion+" . You will need to download the new version before playing.");
    dllfree();
    game_end();
    exit;
}

//Make sure a game is selected
if(global.connectip = '')
 exit;
if(global.connectip = ' ')
    global.connectip = '';
//If this button is full size
if(scale = 1)
{
 //Make text buttons disappear
 with(prnt_menubutton)
  animation = 1;
 //Make the background fade out
 obj_menumod.animation = 1;
 //Set time until room transition and connection
 alarm[3] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
