<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_viewmap_mask;
instance_create(x, y, obj_showpreview);
//Background preview
backspeed = 0;
back[0] = backspeed/10;
back[2] = backspeed/3;
back[3] = backspeed/4;
back[4] = backspeed/5;
back[5] = backspeed/10;
//Imitialize size variable and growth switch
growth = 0;
growing = 0;
display = 0;
//Set display variable according to selected map
switch(global.matchlevel)
{
 case "Deep Space":
    display = 0;
 break;
 case "Katrin Base":
    display = 1; 
 break;
 case "Combat Zone":
    display = 2; 
 break;
 case "Victa Tundra":
    display = 3; 
 break;
 case "Barricade":
    display = 4; 
 break;
 case "Victa Base":
    display = 5; 
 break;
 case "Satellite":
    display = 6; 
 break;
 case "Katrin Coast":
    display = 7; 
 break;
 case "Space Depot":
    display = 8; 
 break;
 case "Orbit Station":
    display = 9; 
 break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set display variable according to selected map
switch(global.matchlevel)
{
 case "Random":
    display = 0;
 break;
 case "Deep Space":
    display = 0;
 break;
 case "Katrin Base":
    display = 1; 
 break;
 case "Combat Zone":
    display = 2; 
 break;
 case "Victa Tundra":
    display = 3; 
 break;
 case "Barricade":
    display = 4; 
 break;
 case "Victa Base":
    display = 5; 
 break;
 case "Satellite":
    display = 6; 
 break;
 case "Katrin Coast":
    display = 7; 
 break;
 case "Space Depot":
    display = 8; 
 break;
 case "Orbit Station":
    display = 9; 
 break;
}
//Handle map display growing
if(growing = 1 &amp;&amp; growth &lt; 1)
 growth += 0.1;
if(growing = 0 &amp;&amp; growth &gt; 0)
 growth -= 0.1;
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Turn the growth switch off
growing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Turn the growth switch on
if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
growing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.master = false)
    exit;
//Check if there is a popup window. Exit if there is.
if(global.creatinggame = 1)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//There is now a popup window
global.creatinggame = 1;
//Create the popup
instance_create(384, 240, obj_modbox); 

  //If a rule change is not typed, send what you typed to clients
with(obj_waiting)
{
  chatline[0] = chatline[1];
  chatcolor[0] = chatcolor[1];
  chatline[1] = chatline[2];
  chatcolor[1] = chatcolor[2];
  chatline[2] = chatline[3];
  chatcolor[2] = chatcolor[3];
  chatline[3] = chatline[4];
  chatcolor[3] = chatcolor[4];
  chatline[4] = chatline[5];
  chatcolor[4] = chatcolor[5];
  chatline[5] = chatline[6];
  chatcolor[5] = chatcolor[6];
  chatline[6] = chatline[7];
  chatcolor[6] = chatcolor[7];
  chatline[7] = chatline[8];
  chatcolor[7] = chatcolor[8];
  chatline[8] = "The host is changing match settings.";
  chatcolor[8] = c_maroon;
 //Send the message to clients
 clearbuffer(0);
 writebyte(11, 0);
 writebyte(global.mymid, 0);
 writedouble(chatcolor[8], 0);
 writestring(chatline[8], 0);
 client_sendall(0, 0);   
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>backspeed += 5;
back[0] = backspeed/10;
back[2] = backspeed/3;
back[3] = backspeed/4;
back[4] = backspeed/5;
back[5] = backspeed/10;
switch(global.matchlevel)
{
       case "Deep Space":
            draw_preview(global.back_map_dspace1, back[0]);
            draw_preview(global.back_map_dspace2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_sprite_ext(spr_previewnames, 1, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Katrin Base":
            draw_preview(global.back_map_kbase, back[2]);
            draw_sprite_ext(spr_previewnames, 5, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Combat Zone":
            draw_preview(global.back_map_czone1, back[0]);
            draw_preview(global.back_map_czone2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_preview(global.back_map_czone3, back[4]);
            draw_sprite_ext(spr_previewnames, 2, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Victa Tundra":
            back[2] = backspeed/1.5;
            back[3] = backspeed/2.5;
            draw_preview(global.back_map_vtundra1, back[0]);
            draw_preview(global.back_map_vtundra2, back[2]);
            draw_preview(global.back_map_vtundra3, back[3]);
            draw_sprite_ext(spr_previewnames, 7, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Barricade":
            draw_preview(global.back_map_barricade1, back[0]);
            draw_preview(global.back_map_barricade2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_sprite_ext(spr_previewnames, 3, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Victa Base":
            draw_preview(global.back_map_vbase, back[2]);
            draw_sprite_ext(spr_previewnames, 8, 0, 176, 1, 1, 0, c_white, image_alpha);       
       break;
       case "Satellite":
            draw_preview(global.back_map_sat1, back[0]);
            draw_preview(global.back_map_sat2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_sprite_ext(spr_previewnames, 4, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Orbit Station":
            draw_preview(global.back_map_ostation2, back[0]);
            draw_preview(global.back_map_sat2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_preview(global.back_map_ostation, back[4]);
            draw_sprite_ext(spr_previewnames, 11, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Katrin Coast":
            draw_preview(global.back_map_kcoast, back[2]);
            draw_sprite_ext(spr_previewnames, 6, 0, 176, 1, 1, 0, c_white, image_alpha);       
       break;
       case "Space Depot":
            draw_preview(global.back_map_barricade1, back[0]);
            draw_preview(global.back_map_barricade2, back[2]);
            draw_preview(global.back_map_stars, back[3]);
            draw_preview(global.back_map_sdepot, back[4]);
            draw_sprite_ext(spr_previewnames, 10, 0, 176, 1, 1, 0, c_white, image_alpha);
       break;
       case "Random":
            draw_preview(global.back_map_random, back[2]);
            draw_sprite_ext(spr_previewnames, 9, 0, 176, 1, 1, 0, c_white, image_alpha);       
       break;
}
draw_background_ext(back_mappreview, 0, 176, 1, 1, 0, c_white, image_alpha); 
for(i = 1; i &lt;= global.matchvariable; i += 1)
    draw_sprite_ext(spr_lifecount, 0, x-18+(i*12), y+6, 1, 1, 0, c_white, image_alpha);    
if(growing = 1 &amp;&amp; global.master = true)
    draw_sprite_ext(spr_map_select, 0, x, y, 1, 1, 0, c_white, image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
