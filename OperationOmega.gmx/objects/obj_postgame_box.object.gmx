<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_postgame_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Show only this image
image_single = 0;
//Initialize creation check
creategamenow = 0;


image_alpha = 0;
image_xscale = 0.6;
image_yscale = 0.6;
animation = 0;
over_alpha = 0;
display_alpha = 0;
mouse_over = false;


if(global.outcome = 0)
{
    message = "Operation Successful";
    if(global.team[global.mymid] = 1)
        messagecolor = c_red;
    else
        messagecolor = c_navy;    
}
else    
{
    message = "Operation Failed";
    if(global.team[global.mymid] = 1)
        messagecolor = c_navy;
    else
        messagecolor = c_red;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(animation)
{
    case 0:
        image_xscale += 0.05;
        image_yscale += 0.05;
        image_alpha += 0.053;
        if(image_xscale &gt;= 1.2)
            animation = 1;
    break;
    case 1:
        image_xscale -= 0.04;
        image_yscale -= 0.04;
        image_alpha += 0.072;
        display_alpha += 0.1;
        if(image_xscale = 1)
        {
            animation = 2;
            image_alpha = 1;
        }
    break; 
    case 2:
        if(display_alpha &lt; 1)
            display_alpha += 0.1;
    break;   
    case 3:
        image_xscale += 0.04;
        image_yscale += 0.04;
        image_alpha -= 0.072;
        display_alpha -= 0.1;
        if(image_xscale = 1.2)
        {
            animation = 4;
        }
    break; 
    case 4:
        display_alpha -= 0.1;
        image_xscale -= 0.05;
        image_yscale -= 0.05;
        image_alpha -= 0.053;
        if(image_xscale &lt;= 1.1)
            over_alpha -= 0.1;
        if(image_xscale &lt;= 0.6)
        {
            //A popup no loner exists
            global.popup_active = false;
            //Destroy this object
            instance_destroy();
        }    
    break;
}
if(over_alpha &lt; 1 &amp;&amp; animation != 4)
    over_alpha += 0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_over = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_over = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(display_alpha = 1 &amp;&amp; animation = 2)
    animation = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw dimming
draw_set_alpha(image_alpha-0.5)
draw_set_color(c_black);
draw_rectangle(0, 0, 768, 480, 0);

//Draw the popup
draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, 0, c_white, image_alpha*over_alpha);
if(image_alpha != 1)
    draw_sprite_ext(sprite_index, 2, x, y, image_xscale, image_yscale, 0, c_white, (1-image_alpha)*over_alpha);
if(mouse_over = true)
    draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, 0, c_white, image_alpha*over_alpha);
draw_set_alpha(display_alpha);

//166, 166
var player_list = 1;
var player_color;
for(i = 0; i &lt; 8; i++)
{
    if(global.activated[i] != 1) continue;
    if(global.team[i] = 1)
        player_color = c_red;
    else
        player_color = c_blue;
    draw_text_bordered(x-137, y-80+player_list*18, global.othername[i], 1, 1, c_black, player_color);
    draw_text_bordered(x+30, y-80+player_list*18, global.kills[i], 1, 1, c_black, player_color);
    draw_text_bordered(x+98, y-80+player_list*18, global.deaths[i], 1, 1, c_black, player_color);
    player_list++;
}

draw_set_color(messagecolor);
draw_text_bordered(x+14, y-133, message, 1, 1, messagecolor, c_white);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>171,62</point>
    <point>171,171</point>
  </PhysicsShapePoints>
</object>
