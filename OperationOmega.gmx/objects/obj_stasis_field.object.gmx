<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stasis_field</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sfx_play(snd_stasisfield, x, y);
image_xscale = 0;
image_yscale = 0;
appearance_scale = 0;
appearance_alpha = 0;
image_angle = random(360);
step = 0;
slowing = 0;
damaged[0] = 0;
damaged[1] = 0;
damaged[2] = 0;
damaged[3] = 0;
damaged[4] = 0;
damaged[5] = 0;
damaged[6] = 0;
damaged[7] = 0;
damaged[8] = 0;
focus = -1;

alarm[3] = 1;
smoke_emit = part_emitter_create(obj_partsystem.system);
part_emitter_region(obj_partsystem.system, smoke_emit, x-30, x+30, y-30, y+30, 1, 0);

part_emitter_burst(obj_partsystem.system, smoke_emit, obj_partsystem.cryos_frosting, 4);

alarm[4] = 10;
//part_particles_create(obj_partsystem.system, x, y, obj_partsystem.stasis_field, 15);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step = 2)
    exit;
var size_emit;
size_emit = max(30, 114*image_xscale);
part_emitter_region(obj_partsystem.system, smoke_emit, x-size_emit, x+size_emit, y-size_emit, y+size_emit, 1, 0);

part_emitter_burst(obj_partsystem.system, smoke_emit, obj_partsystem.cryos_frosting, 2+irandom(2));
part_emitter_burst(obj_partsystem.system, smoke_emit, obj_partsystem.cryos_charge_cloud[global.team[mid]-1], irandom(2));
part_emitter_burst(obj_partsystem.system, smoke_emit, obj_partsystem.cryos_stasis[global.team[mid]-1], 1+irandom(3));

alarm[4] = 13+irandom(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slowing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_xscale &lt; 1.6 &amp;&amp; step = 0)
{
    image_xscale += 0.1;
    image_yscale = image_xscale;
    appearance_scale = image_xscale;
    appearance_alpha += 0.0625;
    var size_emit;
    size_emit = max(30, 114*image_xscale);
    part_emitter_region(obj_partsystem.system, smoke_emit, x-size_emit, x+size_emit, y-size_emit, y+size_emit, 1, 0);

    part_emitter_burst(obj_partsystem.system, smoke_emit, obj_partsystem.cryos_frosting, irandom(2));
    
    if(focus != -1 &amp;&amp; instance_exists(focus))
    {
        speed = 14;
        direction = point_direction(x, y, focus.x, focus.y);
        if(point_distance(x, y, focus.x, focus.y) &lt; speed)
        {
            x = focus.x;
            y = focus.y;
            speed = 0;
        }
    }
    if(image_xscale = 1.6)
    {
        speed = 0;
        step = 1;
        alarm[1] = 60;
    }
}
if(step = 2)
{
    appearance_alpha -= 0.05;
    if(image_xscale &gt; 0)
    {
        image_xscale -= 0.1;
        image_yscale = image_xscale;
    }
    if(appearance_alpha = 0)
        instance_destroy();
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.team[mid] = 1)
    draw_set_color(c_red);
else
    draw_set_color(c_blue);
draw_sprite_ext(spr_cryos_frost, 0, x, y, appearance_scale, appearance_scale, image_angle, c_white, appearance_alpha);
draw_set_alpha(appearance_alpha);
draw_circle(x, y, 114*appearance_scale, 1);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>77,77</point>
    <point>77,77</point>
  </PhysicsShapePoints>
</object>
