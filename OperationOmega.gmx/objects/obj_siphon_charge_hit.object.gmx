<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_primary</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show = 0;
alarm[1] = 1;
alarm[0] = 7;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooting_direction = point_direction(origin.x, origin.y, target.x, target.y);

     
//If there is shield left, create effect
if(target.shieldup = 1)
{
 hurt = instance_create(0, 0, obj_hit);
 hurt.hitdir = point_direction(target.x, target.y, origin.x, origin.y);
 hurt.hurting = target;
}
//Make the hit ship flash
hurt = instance_create(0, 0, obj_ship_flash);
hurt.hurting = target;  
hurt.ship_image = global.selected_ship[target.mid]-1;


//Absorb shield
if(target.shield &gt; 0) origin.shield += 1.5;

if(target.mid = global.mymid)
{
    var origin_object = origin;
    with(target)
    {
        shield -= 4;
        //If there is no more shield, transfer damage to armor
        if(shield &lt; 0) 
        {
         armor += shield/2;
         shield = 0;
        }
        
        alarm[4] = regentime;
         
        //Update smoking
        if(armor &lt;= (armor_maximum*100)/60)
         smoke = floor(armor/(armor_maximum/10));
        
        //Check if your ship has been defeated
        if(armor &lt;= 0)
        {
            //Take note of the player that defeated you
            defeatmid = origin_object.mid;
            //Make a defeat message
            
            //Check if your ship has been defeated
            if(armor &lt;= 0)
            {
                //Make a defeat message
                if(global.ships &gt; 1)
                    random_message(global.othername[origin_object.mid], global.name, "Siphon");
                else
                    message = global.othername[origin_object.mid]+" ELIMINATED "+global.name+".(Siphon)";
            
                //Destroy this object
                event_perform(ev_other, ev_user2);
            
            }       
        }
    }
}
show = 1;

team_id = global.team[mid]-1;
part_particles_create(obj_partsystem.system, target.x, target.y, obj_partsystem.elecspark[team_id], 7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show = 0) exit;

var pointdist, pointdir;
draw_electricity(origin.x, origin.y, target.x, target.y, electric_color, 3, 3, 6, true)//3-random(6) is equal in either way

pointdist = irandom(point_distance(origin.x, origin.y, target.x, target.y));
pointdir = point_direction(origin.x, origin.y, target.x, target.y);
part_particles_create(obj_partsystem.system, origin.x+lengthdir_x(pointdist, pointdir), origin.y+lengthdir_y(pointdist, pointdir), obj_partsystem.elecspark[team_id], 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,8</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
