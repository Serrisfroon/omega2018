<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_profileslot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
image_xscale = 0.6;
image_yscale = 0.6;
animation = 0;
over_alpha = 0;
display_alpha = 0;

//Calculate the player's rating
rating = global.playerkills*10+global.playermatchwin*25-global.playerdeaths*3-global.playermatchloss*10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(animation)
{
    case 0:
        image_xscale += 0.05;
        image_yscale += 0.05;
        image_alpha += 0.053;
        if(image_xscale &gt;= 1.2)
            animation = 1;
    break;
    case 1:
        image_xscale -= 0.04;
        image_yscale -= 0.04;
        image_alpha += 0.072;
        display_alpha += 0.1;
        if(image_xscale = 1)
        {
            animation = 2;
            image_alpha = 1;
        }
    break; 
    case 2:
        if(display_alpha &lt; 1)
            display_alpha += 0.1;
    break;   
    case 3:
        image_xscale += 0.04;
        image_yscale += 0.04;
        image_alpha -= 0.072;
        display_alpha -= 0.1;
        if(image_xscale = 1.2)
        {
            animation = 4;
        }
    break; 
    case 4:
        display_alpha -= 0.1;
        image_xscale -= 0.05;
        image_yscale -= 0.05;
        image_alpha -= 0.053;
        if(image_xscale &lt;= 1.1)
            over_alpha -= 0.1;
        if(image_xscale &lt;= 0.6)
            image_alpha = 0;
    break;
}
if(over_alpha &lt; 1 &amp;&amp; animation != 4)
    over_alpha += 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the font and color
draw_set_font(fnt_digital);
draw_set_color(c_black);


//Draw the profile box
draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, 0, c_white, image_alpha*over_alpha);
if(image_alpha != 1)
    draw_sprite_ext(sprite_index, 1, x, y, image_xscale, image_yscale, 0, c_white, (1-image_alpha)*over_alpha);
draw_set_alpha(display_alpha);


//Draw your name
draw_text(x-145+16, y-55+4, global.myname);
draw_text(x-145+16, y-55+22, "Rating: "+string(rating));
draw_text(x-145+16, y-55+92, "Wins: "+string(global.playermatchwin)+"     Losses: "+string(global.playermatchloss));
//draw_text(x-145+16, y-55+92, "Kills: "+string(global.playerkills)+"     Deaths: "+string(global.playerdeaths));

//Draw the selected ship and find the starting x for drawing deploys
switch(global.shipselect)
{
 //Alphastar
 case 1:
      draw_sprite_ext(spr_alphastar, 0, x-145+272, y-55+24, 1, 1, 90, c_white, display_alpha);
      deployx = 112;
      deployno = 1;
 break;
 //Swiftwing
 case 2:
      draw_sprite_ext(spr_swiftwing, 0, x-145+272, y-55+24, 1, 1, 90, c_white, display_alpha);
      deployx = 134;
      deployno = 2;
 break;
 //Goliath
 case 3:
      draw_sprite_ext(spr_goliath, 0, x-145+272, y-55+24, 1, 1, 90, c_white, display_alpha);
      deployx = 80;
      deployno = 0;
 break;
}

//Draw selected Primary
switch(global.primary)
{
 case 0:
      draw_sprite_ext(spr_numbers_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 1:
      draw_sprite_ext(spr_needle_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 2:
      draw_sprite_ext(spr_sonic_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 3:
      draw_sprite_ext(spr_wave_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 4:
      draw_sprite_ext(spr_flank_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 5:
      draw_sprite_ext(spr_stasis_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 6:
      draw_sprite_ext(spr_crossfire_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 7:
      draw_sprite_ext(spr_siphon_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 8:
      draw_sprite_ext(spr_double_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 9:
      draw_sprite_ext(spr_pierce_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
 case 10:
      draw_sprite_ext(spr_spread_icon, 0, x-145+16, y-55+48, 1, 1, 0, c_white, display_alpha);
 break;
}

//Loop to draw energy secondary icons
for(i = 1; i &lt;= 3; i += 1)
{
 //Do not draw a third energy icon for Alphastar
 if(global.shipselect = 1 &amp;&amp; i = 3) break;
 //Do not draw a second or third energy icon for Goliath
 if(global.shipselect = 3 &amp;&amp; i &gt; 1) break;
 switch(global.esecond[i])
 {
  case 0:
       draw_sprite_ext(spr_numbers_icon, 1, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 1:
       draw_sprite_ext(spr_fusion_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 2:
       draw_sprite_ext(spr_stardust_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 3:
       draw_sprite_ext(spr_barrier_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 4:
       draw_sprite_ext(spr_beam_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 5:
       draw_sprite_ext(spr_formation_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 6:
       draw_sprite_ext(spr_sparkline_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 7:
       draw_sprite_ext(spr_burst_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 8:
       draw_sprite_ext(spr_slash_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 9:
       draw_sprite_ext(spr_horizon_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 10:
       draw_sprite_ext(spr_spiral_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 11:
       draw_sprite_ext(spr_laser_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 12:
       draw_sprite_ext(spr_trail_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 13:
       draw_sprite_ext(spr_reflection_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 14:
       draw_sprite_ext(spr_storm_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 15:
       draw_sprite_ext(spr_trigger_icon, 0, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
 }
 draw_sprite_ext(spr_numbers_icon, 3, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
 draw_sprite_ext(spr_numbers_icon, i+4, x-145+32+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
}

//Loop to draw deploy icons
for(i = 1; i &lt;= 3; i += 1)
{
 //Do not draw a third deploy icon for Alphastar
 if(global.shipselect = 1 &amp;&amp; i = 3) break;
 //Do not draw a second or third deploy icon for Swiftwing
 if(global.shipselect = 2 &amp;&amp; i &gt; 1) break;
 
 switch(global.deploy[i])
 {
  case 0:
       draw_sprite_ext(spr_numbers_icon, 2, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 1:
       draw_sprite_ext(spr_dualmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 2:
       draw_sprite_ext(spr_layermissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 3:
       draw_sprite_ext(spr_huntermine_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 4:
       draw_sprite_ext(spr_locustmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 5:
       draw_sprite_ext(spr_phantommine_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 6:
       draw_sprite_ext(spr_solus_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 7:
       draw_sprite_ext(spr_tridentmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 8:
       draw_sprite_ext(spr_shockmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 9:
       draw_sprite_ext(spr_hackermine_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 10:
       draw_sprite_ext(spr_hermitmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 11:
       draw_sprite_ext(spr_strikemissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 12:
       draw_sprite_ext(spr_strikemine_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 13:
       draw_sprite_ext(spr_turret_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 14:
       draw_sprite_ext(spr_splitmissile_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
  case 15:
       draw_sprite_ext(spr_clustermine_icon, 0, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
  break;
 }
 draw_sprite_ext(spr_numbers_icon, 4, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
 draw_sprite_ext(spr_numbers_icon, deployno+i+5, x-145+deployx+(i*41), y-55+48, 1, 1, 0, c_white, display_alpha);
}
 if(global.spacehot != 0)
       switch(global.spacehot)
       {
        case 1:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+73, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;
        case 2:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+105, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;
        case 3:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+137, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;      
        case 4:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+deployx+41, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;      
        case 5:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+deployx+82, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;
        case 6:
             draw_sprite_ext(spr_numbers_icon, 9, x-145+deployx+143, y-55+48, 1, 1, 0, c_white, display_alpha);
        break;
       }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>11,11</point>
    <point>161,161</point>
  </PhysicsShapePoints>
</object>
