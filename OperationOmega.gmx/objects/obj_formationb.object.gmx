<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_newformation</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_allyenergy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set speed and time until stop
speed = 10;
alarm[0] = 6;
//Initialize stage variable and set time until next stage
lesser = 0;
alarm[3] = 2;
hit = 1;
amplified = 0;
priority = 0;
image_speed = 0
image_index = 0;
form_particle = obj_partsystem.formsplit[0];
if(global.allycolor != c_red)
{
    image_index = 1;
    form_particle = obj_partsystem.formsplit[1];
}
alarm[4] = 1;

//Set attack variable values
attack_damage = 7;              //Set the damage for the attack
attack_burst = 0;               //Set the bonus damage of the attack that ignores shield
attack_threshold = 0;        //Set the threshold reduction per hit
attack_shake = 0;               //Set the screen shake intensity of the attack
attack_name = "Formation";       //Set the name of the attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_direction(form_particle, direction-1, direction+1, 0, 0);
part_type_orientation(form_particle,direction,direction,0,0,0);
repeat(10)
    part_particles_create(obj_partsystem.system, x-15+random(30), y-15+random(30), form_particle, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move to next stage. Contact with other shots will destroy this shot.
lesser = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move towards the target if it still exists. Otherwise, move in the main shot's
//original direction
if(instance_exists(control))
{
 if(instance_exists(control.target))
  direction = point_direction(control.x, control.y, control.target.x, control.target.y);
 else
  direction = control.direction;
}
part_type_direction(form_particle, direction-1, direction+1, 0, 0);
part_type_orientation(form_particle,direction,direction,0,0,0);
repeat(10)
    part_particles_create(obj_partsystem.system, x-15+random(30), y-15+random(30), form_particle, 1);
    
if(priority = 1)
    sfx_play(snd_formation, x, y);
bullet_create(x, y, "Formation", direction, mid, 0);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stop moving
speed = 0;
//If this is the final branch, exit the script
if(part = 3)
 exit;
//Create an effect
//Create smaller shots. Give them their direction. Give them a branch number.
//Keep track of the main shot in them. Set the time until they attack dependant 
//on which branch they are in.
switch(location)
{
 case 1:
      form = instance_create(x, y, obj_formationb);
      form.direction = 0;
      form.image_angle = form.direction;
      form.priority = 1;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 1;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 90;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 270;
      form.image_angle = form.direction;
      form.part = part+1; 
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
 break;
 case 2:
      form = instance_create(x, y, obj_formationb);
      form.direction = 90;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 5;
      form.amplified = amplified;
 break;
 case 3:
      form = instance_create(x, y, obj_formationb);
      form.direction = 90;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 180;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 3;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 270;
      form.image_angle = form.direction;
      form.part = part+1; 
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
 break;
 case 4:
      form = instance_create(x, y, obj_formationb);
      form.direction = 270;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 6;
      form.amplified = amplified;
 break;
 case 5:
      form = instance_create(x, y, obj_formationb);
      form.direction = 0;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 90;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 180;
      form.image_angle = form.direction;
      form.part = part+1; 
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
 break;
 case 6:
      form = instance_create(x, y, obj_formationb);
      form.direction = 180;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 270;
      form.image_angle = form.direction;
      form.part = part+1;
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
      form = instance_create(x, y, obj_formationb);
      form.direction = 0;
      form.image_angle = form.direction;
      form.part = part+1; 
      form.control = control;
      form.alarm[1] = (45*(3-part))/(amplified+1);
      form.mid = mid;
      form.location = 0;
      form.amplified = amplified;
 break;
}
//Move to next stage. Contact with other shots will not destroy this one
lesser = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x &lt; 0 || x &gt; room_width || y &lt; 0 || y &gt; room_height)
{
 instance_destroy();
 exit;
}
if(obj_bulletcontrol.wallposition[floor(x/32), floor(y/32)] = true)
 instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
