<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerslot_options</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
scale_in = 0;
scale_out = 0;
nextimage = -1;
changeable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>changeable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 1.2;
image_yscale = 1.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.creatinggame = 1)
    exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clicktext, 1, 0);
switch(image_index)
{
    //Open the slot
    case 0:
        scale_out = 1;
        nextimage = 1;
        owner.slideover = 0;
        global.activated[mid] = 0;
        global.maxplayers += 1;
        if(global.gameslist = 1)
        {
            if(global.playercount = global.maxplayers)
              roomstatus = "Full";
            else
              roomstatus = "Waiting";
            sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, roomstatus);
        }
        
    break;
    //Close the slot
    case 1:
        scale_out = 1;
        nextimage = 0;
        owner.slideover = 0;
        global.activated[mid] = -1;
        global.maxplayers -= 1;
        if(global.gameslist = 1)
        {
            if(global.playercount = global.maxplayers)
              roomstatus = "Full";
            else
              roomstatus = "Waiting";
            sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, roomstatus);
        }    
    break;
    //Confirm a kick; kick the player
    case 2:
        if(image_xscale = 1.2)
        {
            image_xscale = 1.4;
            image_yscale = 1.4;
        }
        else
        {
            image_xscale = 1.2;
            image_yscale = 1.2;
            scale_out = 1;
            nextimage = 1;
            global.activated[mid] = 0;
            global.playercount -= 1;
            with(obj_waiting)
            {
                //Update the info on the games list
                if(global.gameslist = 1)
                    sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, "Waiting");
                //send a notice to your chat and exit
                chatline[0] = chatline[1];
                chatcolor[0] = chatcolor[1];
                chatline[1] = chatline[2];
                chatcolor[1] = chatcolor[2];
                chatline[2] = chatline[3];
                chatcolor[2] = chatcolor[3];
                chatline[3] = chatline[4];
                chatcolor[3] = chatcolor[4];
                chatline[4] = chatline[5];
                chatcolor[4] = chatcolor[5];
                chatline[5] = chatline[6];
                chatcolor[5] = chatcolor[6];
                chatline[6] = chatline[7];
                chatcolor[6] = chatcolor[7];
                chatline[7] = chatline[8];
                chatcolor[7] = chatcolor[8];
                chatline[8] = "The host has kicked "+global.othername[mid]+" from the game.";
                chatcolor[8] = c_maroon;
            }
            
            //Create an effect over the player slot
            global.newmid = mid;    
            with(obj_playerslot)
            {
                if(mid = global.newmid)
                {
                    playerleave = instance_create(x, y, obj_playerslot_playerleave);
                    playerleave.owner = id;
                    playerleave.lastimage = global.lolship[mid]+((global.team[mid]-1)*3)-1;
                    visible = 0;
                }
            }         

            //Send the message to clients
            clearbuffer(0);        
            writebyte(11, 0);
            writebyte(global.mymid, 0);
            writedouble(obj_waiting.chatcolor[8], 0);
            writestring(obj_waiting.chatline[8], 0);
            writebyte(mid, 0);
            client_sendall(0, 0);
            droppedname = global.othername[mid];
            //Drop the player and add the drop to the count
            client_drop(mid);
               
        }
    break;
    case 3:
        if(changeable = 0)
         {
            //Flag it and set a time until next change allowed
            changeable = 1;
            alarm[0] = 30;
            //If you are set as ready
            if(obj_readygo.image_index = 3)
            {
                with(obj_waiting_client)
                {
                    //Send a notice to your chat
                    chatline[0] = chatline[1];
                    chatcolor[0] = chatcolor[1];
                    chatline[1] = chatline[2];
                    chatcolor[1] = chatcolor[2];
                    chatline[2] = chatline[3];
                    chatcolor[2] =chatcolor[3];
                    chatline[3] = chatline[4];
                    chatcolor[3] = chatcolor[4];
                    chatline[4] = chatline[5];
                    chatcolor[4] = chatcolor[5];
                    chatline[5] = chatline[6];
                    chatcolor[5] = chatcolor[6];
                    chatline[6] = chatline[7];
                    chatcolor[6] = chatcolor[7];
                    chatline[7] = chatline[8];
                    chatcolor[7] = chatcolor[8];
                    chatcolor[8] = c_maroon;
                    chatline[8]="You cannot change teams when you are ready.";
                }
                exit;
            }         
            //Red team going blue
            if(global.team[global.mymid] = 1) 
            {
                //Check if blue team has too many
                if(global.blueteam &gt;= ceil(global.playercount/2)+1)
                {
                    with(obj_waiting)
                    {
                        //Send a message to only your chat
                        chatline[0] = chatline[1];
                        chatcolor[0] = chatcolor[1];
                        chatline[1] = chatline[2];
                        chatcolor[1] = chatcolor[2];
                        chatline[2] = chatline[3];
                        chatcolor[2] =chatcolor[3];
                        chatline[3] = chatline[4];
                        chatcolor[3] = chatcolor[4];
                        chatline[4] = chatline[5];
                        chatcolor[4] = chatcolor[5];
                        chatline[5] = chatline[6];
                        chatcolor[5] = chatcolor[6];
                        chatline[6] = chatline[7];
                        chatcolor[6] = chatcolor[7];
                        chatline[7] = chatline[8];
                        chatcolor[7] = chatcolor[8];
                        chatcolor[8] = c_maroon;
                        chatline[8] = "Blue Team cannot accept any more players.";
                    }
                    //You can't change team
                    exit;
                }
                (instance_create(global.playerslot[global.mymid].x, global.playerslot[global.mymid].y, obj_playerslot_teamchange)).image_index = global.lolship[global.mymid]+((global.team[global.mymid]-1)*3)-1;           
           
                //If blue team has room, change team
                global.team[global.mymid] = 2;
                //Update team numbers
                global.redteam -= 1;
                global.blueteam += 1;
            }
            else 
            {
                //Blue team going red
                //Check to see if red team has room
                if(global.redteam &gt;= ceil(global.playercount/2)+1)
                {
                    with(obj_waiting)
                    {
                        //Send a message to your chat
                        chatline[0] = chatline[1];
                        chatcolor[0] = chatcolor[1];
                        chatline[1] = chatline[2];
                        chatcolor[1] = chatcolor[2];
                        chatline[2] = chatline[3];
                        chatcolor[2] = chatcolor[3];
                        chatline[3] = chatline[4];
                        chatcolor[3] = chatcolor[4];
                        chatline[4] = chatline[5];
                        chatcolor[4] = chatcolor[5];
                        chatline[5] = chatline[6];
                        chatcolor[5] = chatcolor[6];
                        chatline[6] = chatline[7];
                        chatcolor[6] = chatcolor[7];
                        chatline[7] = chatline[8];
                        chatcolor[7] = chatcolor[8];
                        chatcolor[8] = c_maroon;
                        chatline[8] = "Red Team cannot accept any more players.";
                    }
                    //You can't change teams
                    exit;
                }
                (instance_create(global.playerslot[global.mymid].x, global.playerslot[global.mymid].y, obj_playerslot_teamchange)).image_index = global.lolship[global.mymid]+((global.team[global.mymid]-1)*3)-1;           
                //If red team has room, change team
                global.team[global.mymid] = 1;
                //Update team numbers
                global.redteam += 1;
                global.blueteam -= 1;
            }
            if(global.master = false)
            {            
                //Send Team Change info to host
                clearbuffer(0);
                writebyte(14, 0);
                writebyte(global.redteam, 0);
                writebyte(global.blueteam, 0);
                writebyte(global.mymid, 0);
                writebyte(global.team[global.mymid], 0);
                sendmessage(global.host, 0, 0, 0);
            }

        }    
    break; 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scale_in &lt; 1)
{
    draw_sprite_ext(sprite_index, image_index+4, x, y, scale_in, scale_in, 0, c_white, 1-scale_in);
    draw_sprite_ext(sprite_index, image_index, x, y, scale_in, scale_in, 0, c_white, scale_in);
    scale_in += 0.05;
}
else
    if(scale_out &gt; 0)
    {
        draw_sprite_ext(sprite_index, image_index+4, x, y, scale_out, scale_out, 0, c_white, scale_out);
        draw_sprite_ext(sprite_index, image_index, x, y, scale_out, scale_out, 0, c_white, 1-scale_out);
        scale_out -= 0.05;    
        if(scale_out = 0.4 &amp;&amp; obj_waiting_boxes.animation &lt; 3)
        {
            image_index = nextimage;
            scale_in = 0.4;
            scale_out = 0;
        }
    }
    else
        if(obj_waiting_boxes.animation &lt; 3)
            draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
