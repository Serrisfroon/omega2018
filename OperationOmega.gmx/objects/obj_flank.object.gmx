<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_empty</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prnt_allyenergy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the auto-destroy time
alarm[0] = 240;
hit = 1;
//Set time until curve stop
seek = 0;
go = 0;
alarm[2] = 1;

//Set attack variable values
attack_damage = 6;          //Set the damage for the attack
attack_burst = 0;           //Set the bonus damage of the attack that ignores shield
attack_threshold = 0;       //Set the threshold reduction per hit
attack_shake = 0;           //Set the screen shake intensity of the attack
attack_name = "Seeker";     //Set the name of the attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create an effect
if(hit = 1)
{
    endeffect = instance_create(x, y, obj_seeker_hit);
    endeffect.mid = mid;
    endeffect.direction = direction-180;
}
else
{
    endeffect = instance_create(x, y, obj_generic_fade);
    endeffect.mid = mid;
    endeffect.direction = direction;
    endeffect.sprite_index = sprite_index;
    endeffect.speed = speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;
curve = 1;
sprite_index = spr_flank;
image_speed = 0;
team_index = global.team[mid]-1;
if(global.allycolor = c_red)
    image_index = 0;
else
    image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(seek = 2)
    exit;
seek += 1;
go = 0;
if(instance_exists(obj_dummy_enemy))
{
    near = instance_nearest(x, y, obj_dummy_enemy);
    if(point_distance(x, y, near.x, near.y) &lt; 500)
    {
        var new_direction = point_direction(x, y, near.x, near.y);
        var turn_direction = get_turn(new_direction);
        switch(turn_direction)
        {
            case 1://The turn is counter-go clockwise
                if(direction &gt; new_direction)
                    part_type_direction(obj_partsystem.seeker_redirect[team_index],new_direction, direction, 0,0);                
                else
                    part_type_direction(obj_partsystem.seeker_redirect[team_index],new_direction, direction+360, 0,0);                
                part_particles_create(obj_partsystem.system, x, y, obj_partsystem.seeker_redirect[team_index], 10);
            break;
            case 2://The turn is clockwise-go counter
                if(direction &gt; new_direction)
                    part_type_direction(obj_partsystem.seeker_redirect[team_index],direction,new_direction+360,0,0);                
                else
                    part_type_direction(obj_partsystem.seeker_redirect[team_index],direction,new_direction,0,0);                            
                part_particles_create(obj_partsystem.system, x, y, obj_partsystem.seeker_redirect[team_index], 10);
            break;
        }
        direction = new_direction;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(go = 0 &amp;&amp; seek &lt; 2)
{
      focus = instance_nearest(x, y, obj_dummy_enemy);
    if(point_distance(x, y, focus.x, focus.y) &lt; 200)
    {
            go = 1;
            alarm[1] = 20;
    }
}
image_angle = direction;
if(x &lt; 0 || x &gt; room_width || y &lt; 0 || y &gt; room_height)
{
 instance_destroy();
 exit;
}
if(obj_bulletcontrol.wallposition[floor(x/32), floor(y/32)] = true)
 instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,8</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
