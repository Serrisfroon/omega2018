<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_needle_icon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>spr_needle_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This slot is not selected
growth = 0;
growing = 0;
selected = 0;
empty = -1;
if(global.primary = 0)
{
    empty = instance_create(x, y, obj_emptyslot);
    empty.sprite_index = spr_selectprimary;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.primary = changeselect;

if(empty != -1)
    with(empty)
        instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> selected = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Handle map display growing
if(growing = 1 &amp;&amp; growth &lt; 1)
 growth += 0.1;
if(growing = 0 &amp;&amp; growth &gt; 0)
 growth -= 0.1;
//Make the tranparency follow taht of the background for transition effect
if(instance_exists(obj_customizer))
    image_alpha = obj_customizer.backbox.display_alpha*obj_customizer.weaponslots_alpha;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 0;
alarm[3] = -1;
image_xscale = 1;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(speed != 0)
    exit;
alarm[3] = 20;
growing = 2;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
prnt_selection.image_xscale = 1;
prnt_selection.image_yscale = 1;
prnt_selection.depth = -1;
depth = -2;
image_xscale = 1.35;
image_yscale = 1.35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//disable function if currently moving on a path
with(prnt_selection)
    if(speed != 0)
        exit;
if(selected = 1 || global.popup_active = true)
    exit;

if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//return icons accordingly
with(obj_icon_option)
{
    action = 1;
    alarm[1] = 1;
}
//Disselect all other slots
with(prnt_selection) selected = 0;
//Select this slot
if(obj_readygo.readied = 0)
{
    create_icon(spr_needle_icon, 1);    
    create_icon(spr_sonic_icon, 1);    
    create_icon(spr_wave_icon, 1);    
    create_icon(spr_flank_icon, 1);    
    create_icon(spr_stasis_icon, 1);    
    create_icon(spr_crossfire_icon, 1);    
    create_icon(spr_siphon_icon, 1);    
    create_icon(spr_double_icon, 1);    
    create_icon(spr_pierce_icon, 1);    
    create_icon(spr_spread_icon, 1);        
    alarm[2] = 1;
}
else
{
    if(global.mymid = 0)
        send = obj_waiting;
    else
        send = obj_waiting_client;
    with(send)
    {
        //Send a message to your chat
        chat_addline("You cannot configure your ship when ready.", 1, 0, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.primaryimage = spr_empty;
global.secondary_icon_image[1] = spr_empty;
global.secondary_icon_image[2] = spr_empty;
global.secondary_icon_image[3] = spr_empty;
global.secondary_icon_image[4] = spr_empty;

switch(global.primary)
{
     case 1:
          global.primaryimage = spr_needle_icon;
     break;
     case 2:
          global.primaryimage = spr_sonic_icon;
     break;
     case 3:
          global.primaryimage = spr_wave_icon;
     break;
     case 4:
          global.primaryimage = spr_flank_icon;
     break;
     case 5:
          global.primaryimage = spr_stasis_icon;
     break;
     case 6:
          global.primaryimage = spr_crossfire_icon;
     break;
     case 7:
          global.primaryimage = spr_siphon_icon;
     break;
     case 8:
          global.primaryimage = spr_double_icon;
     break;
     case 9:
          global.primaryimage = spr_pierce_icon;
     break;
     case 10:
          global.primaryimage = spr_spread_icon;
     break;
}
for(i = 1; i &lt;= 4; i++)
{
    switch(global.secondary[i])
    {
        case 1:
             global.secondary_icon_image[i] = spr_fusion_icon;
        break;
        case 2:
             global.secondary_icon_image[i] = spr_stardust_icon;
        break;
        case 3:
             global.secondary_icon_image[i] = spr_barrier_icon;
        break;
        case 5:
             global.secondary_icon_image[i] = spr_beam_icon;
        break;
        case 4:
             global.secondary_icon_image[i] = spr_formation_icon;
        break;
        case 6:
             global.secondary_icon_image[i] = spr_sparkline_icon;
        break;
        case 7:
             global.secondary_icon_image[i] = spr_burst_icon;
        break;
        case 8:
             global.secondary_icon_image[i] = spr_slash_icon;
        break;
        case 9:
             global.secondary_icon_image[i] = spr_horizon_icon;
        break;
        case 10:
             global.secondary_icon_image[i] = spr_spiral_icon;
        break;
        case 11:
             global.secondary_icon_image[i] = spr_laser_icon;
        break;
        case 12:
             global.secondary_icon_image[i] = spr_trail_icon;
        break;
        case 13:
             global.secondary_icon_image[i] = spr_reflection_icon;
        break;
        case 14:
             global.secondary_icon_image[i] = spr_storm_icon;
        break;
        case 15:
             global.secondary_icon_image[i] = spr_thorn_icon;
        break;
        case 16:
             global.secondary_icon_image[i] = spr_dualmissile_icon;
        break;
        case 17:
             global.secondary_icon_image[i] = spr_layermissile_icon;
        break;
        case 24:
             global.secondary_icon_image[i] = spr_huntermine_icon;
        break;
        case 18:
             global.secondary_icon_image[i] = spr_locustmissile_icon;
        break;
        case 25:
             global.secondary_icon_image[i] = spr_phantommine_icon;
        break;
        case 29:
             global.secondary_icon_image[i] = spr_solus_icon;
        break;
        case 19:
             global.secondary_icon_image[i] = spr_tridentmissile_icon;
        break;
        case 20:
             global.secondary_icon_image[i] = spr_shockmissile_icon;
        break;
        case 26:
             global.secondary_icon_image[i] = spr_hackermine_icon;
        break;
        case 21:
             global.secondary_icon_image[i] = spr_hermitmissile_icon;
        break;
        case 23:
             global.secondary_icon_image[i] = spr_strikemissile_icon;
        break;
        case 28:
             global.secondary_icon_image[i] = spr_strikemine_icon;
        break;
        case 30:
             global.secondary_icon_image[i] = spr_turret_icon;
        break;
        case 22:
             global.secondary_icon_image[i] = spr_splitmissile_icon;
        break;
        case 27:
             global.secondary_icon_image[i] = spr_clustermine_icon;
        break;
        case 31:
             global.secondary_icon_image[i] = spr_solgrenade_icon;
        break;
        case 32:
             global.secondary_icon_image[i] = spr_lunagrenade_icon;
        break;
        case 33:
             global.secondary_icon_image[i] = spr_flashbomb_icon;
        break;
        case 34:
             global.secondary_icon_image[i] = spr_buster_icon;
        break;
        case 35:
             global.secondary_icon_image[i] = spr_paladindrone_icon;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If this slot is selected, highlight it
if(selected = 1)
 draw_sprite_ext(spr_numbers_selected, 0, x, y, 1, 1, 0, c_white, image_alpha);
//Display the correct icon in this slot
var teamcolorimg = global.team[global.mymid]-1;
switch(global.primary)
{
 case 0:
      draw_sprite_ext(spr_numbers_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 1:
      draw_sprite_ext(spr_needle_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 2:
      draw_sprite_ext(spr_sonic_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 3:
      draw_sprite_ext(spr_wave_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 4:
      draw_sprite_ext(spr_flank_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 5:
      draw_sprite_ext(spr_stasis_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 6:
      draw_sprite_ext(spr_crossfire_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 7:
      draw_sprite_ext(spr_siphon_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 8:
      draw_sprite_ext(spr_double_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 9:
      draw_sprite_ext(spr_pierce_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 10:
      draw_sprite_ext(spr_spread_icon, teamcolorimg, x, y, 1, 1, 0, c_white, image_alpha);
 break;
}
draw_sprite_ext(spr_weapons_infos, 0, x+12, y+12, growth, growth, 0, c_white, 0.6*growth+0.2);
if(growing != 0)
    draw_sprite_ext(spr_icon_select, 0, x, y, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
