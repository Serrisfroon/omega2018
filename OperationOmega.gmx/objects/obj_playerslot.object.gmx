<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerslot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_playerslot;
confirm = 0;
alarm[0] = 60+random(300);
image_alpha = 0;
appear = 0;
usealpha = 0;
startalpha = 0;
slideover = 220;
showthisimage = 1;
readyalpha = 0;
changeable = 0;
confirm_kick = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>confirm_kick = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>changeable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = -2;
appear = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.activated[mid] = 0 &amp;&amp; hspeed = 0)
{
    visible = 0;
    (instance_create(x, y, obj_playerslot_openeffect)).owner = id;
}
alarm[0] = 180+random(300);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(obj_playerslot_selected))
    exit;
global.othermid = mid;
with(obj_playerslot_selected)
    if(mid = global.othermid)
        instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.master = 1 || mid = global.mymid)
    (instance_create(x, y, obj_playerslot_selected)).mid = mid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.popup_active = true)
    exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clicktext, 1, 0);
switch(global.activated[mid])
{
    //Open the slot
    case -1:
        global.activated[mid] = 0;
        global.maxplayers += 1;
        slideover = 0;
        if(global.public_game = true)
        {
            if(global.playercount = global.maxplayers)
              roomstatus = "Full";
            else
              roomstatus = "Waiting";
            sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, roomstatus);
        }
        
    break;
    //Close the slot
    case 0:
        slideover = 0;
        global.activated[mid] = -1;
        global.maxplayers -= 1;
        if(global.public_game = true)
        {
            if(global.playercount = global.maxplayers)
              roomstatus = "Full";
            else
              roomstatus = "Waiting";
            sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, roomstatus);
        }    
    break;
    //Confirm a kick; kick the player
    case 1:
        if(mid != global.mymid)
        {
            if(confirm_kick = 0)
            {
                confirm_kick = 1;
                with(obj_waiting)
                {
                    //send a notice to your chat and exit
                    chat_addline("Click on this slot again to kick "+global.othername[mid]+" from the game.", 1, 0, global.mymid);
                }       
                alarm[3] = 120;         
                exit;
            }
            global.activated[mid] = 0;
            global.playercount -= 1;
            with(obj_waiting)
            {
                //Update the info on the games list
                if(global.public_game = true)
                    sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, "Waiting");
                //send a notice to al chats
                chat_addline("The host has kicked "+global.othername[mid]+" from the game.", 1, 1, global.mymid);

            }
            
            //Create an effect over the player slot
            global.newmid = mid;    
            playerleave = instance_create(x, y, obj_playerslot_playerleave);
            playerleave.owner = id;
            playerleave.lastimage = global.selected_ship[mid]+((global.team[mid]-1)*3)-1;
            visible = 0;
                

            droppedname = global.othername[mid];
            //Drop the player and add the drop to the count
            client_drop(mid);
               
        }
        else
        {
            if(changeable = 0)
             {
                //Flag it and set a time until next change allowed
                changeable = 1;
                alarm[2] = 30;
                //If you are set as ready
                if(obj_readygo.image_index = 3)
                {
                    with(obj_waiting_client)
                    {
                        //Send a notice to your chat
                        chat_addline("You cannot change teams when you are ready.", 1, 0, global.mymid);
                    }
                    exit;
                }         
                //Red team going blue
                if(global.team[global.mymid] = 1) 
                {
                    //Check if blue team has too many
                    if(global.blueteam &gt;= ceil(global.playercount/2)+1)
                    {
                        with(obj_waiting)
                        {
                            //Send a message to only your chat
                            chat_addline("Blue Team cannot accept any more players.", 1, 0, global.mymid);
                        }
                        //You can't change team
                        exit;
                    }
                    (instance_create(global.playerslot[global.mymid].x, global.playerslot[global.mymid].y, obj_playerslot_teamchange)).image_index = global.selected_ship[global.mymid]+((global.team[global.mymid]-1)*3)-1;           
               
                    //If blue team has room, change team
                    global.team[global.mymid] = 2;
                    //Update team numbers
                    global.redteam -= 1;
                    global.blueteam += 1;
                }
                else 
                {
                    //Blue team going red
                    //Check to see if red team has room
                    if(global.redteam &gt;= ceil(global.playercount/2)+1)
                    {
                        with(obj_waiting)
                        {
                            //Send a message to your chat
                            chat_addline("Red Team cannot accept any more players.", 1, 0, global.mymid);
                        }
                        //You can't change teams
                        exit;
                    }
                    (instance_create(global.playerslot[global.mymid].x, global.playerslot[global.mymid].y, obj_playerslot_teamchange)).image_index = global.selected_ship[global.mymid]+((global.team[global.mymid]-1)*3)-1;           
                    //If red team has room, change team
                    global.team[global.mymid] = 1;
                    //Update team numbers
                    global.redteam += 1;
                    global.blueteam -= 1;
                }
                if(global.master = false)
                {            
                    //Send Team Change info to host
                    clearbuffer(0);
                    writebyte(14, 0);
                    writebyte(global.redteam, 0);
                    writebyte(global.blueteam, 0);
                    writebyte(global.mymid, 0);
                    writebyte(global.team[global.mymid], 0);
                    sendmessage(global.host, 0, 0, 0);
                }
    
            }           
        }
    break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(startalpha &lt; 1)
{
    usealpha = startalpha;
    if(hspeed != 0)
        startalpha += 0.06;
}
else
{
    hspeed = 0;
    usealpha = obj_customizer.rightbox.display_alpha;
}
    
switch(global.activated[mid])
{
case 0:
    if(slideover &gt;= sprite_width-16)
        draw_sprite_ext(sprite_index, 8, x, y, 1, 1, 0, c_white, usealpha);
    else
    {
        slideover += 8;
        draw_sprite_part_ext(sprite_index, 9, 0, 0, sprite_width-slideover-5, sprite_height, x, y, 1, 1, c_white, usealpha);
        draw_sprite_part_ext(sprite_index, 8, sprite_width-slideover-5, 0, slideover, sprite_height, x+sprite_width-slideover-5, y, 1, 1, c_white, usealpha);    
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+5, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+8, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+11, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+14, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+17, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+20, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+23, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+26, obj_customizer.changeslotpart, 1);
    }
break;
case 1:
    if(showthisimage = 0)
        draw_sprite_ext(sprite_index, 8, x, y, 1, 1, 0, c_white, usealpha);    
    else
    {    
        draw_sprite_ext(sprite_index, global.selected_ship[mid]+((global.team[mid]-1)*3)-1, x, y, 1, 1, 0, c_white, usealpha);
        if(global.readied[mid] = 2 || mid = 0)
        {
            draw_sprite_ext(sprite_index, 5+global.team[mid], x, y, 1, 1, 0, c_white, min(usealpha, readyalpha));
            readyalpha += 0.05;
        }
        else
            readyalpha = 0;
        draw_set_alpha(usealpha);
        if(global.team[mid] = 1)
            text_color = c_red;
        else
            text_color = c_blue;
        draw_text_bordered(x+10, y+6, global.othername[mid], 1, 1, c_black, text_color);
        draw_set_alpha(1);
    }
break;
default:
    if(slideover &gt;= sprite_width-16)
        draw_sprite_ext(sprite_index, 9, x, y, 1, 1, 0, c_white, usealpha);
    else
    {
        slideover += 8;
        draw_sprite_part_ext(sprite_index, 8, 0, 0, sprite_width-slideover-5, sprite_height, x, y, 1, 1, c_white, usealpha);
        draw_sprite_part_ext(sprite_index, 9, sprite_width-slideover-5, 0, slideover, sprite_height, x+sprite_width-slideover-5, y, 1, 1, c_white, usealpha);    
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+5, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+8, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+11, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+14, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+17, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+20, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+23, obj_customizer.changeslotpart, 1);
        part_particles_create(obj_customizer.playerslot_particles, x+sprite_width-slideover-5, y+26, obj_customizer.changeslotpart, 1);
    }
break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
