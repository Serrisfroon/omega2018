<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This object will create host-client specific objects for this room
if(global.master = true)
{
 instance_create(0, 0, obj_waiting);
}
else
{
 instance_create(0, 0, obj_waiting_client);
}

backbox = instance_create(0, 0, obj_waiting_boxes);
rightbox = instance_create(664, 150, obj_waiting_boxes);
bottombox = instance_create(0, 480, obj_waiting_boxes);
backbox.sprite_index = spr_waiting;
rightbox.sprite_index = spr_waiting_right;
bottombox.sprite_index = spr_waiting_bottom;
rightbox.animation = -1;
bottombox.animation = -1;
alarm[0] = 10;
alarm[3] = 120;

//Initialize the bars' current sizes
astretch = 0;
sstretch = 0;
mstretch = 0;
cstretch = 0;
//Initialize the bars' max sizes
switch(global.shipselect)
{
 case 1:
       amaxd = 0.6;
       smaxd = 0.6;
       mmaxd = 0.6;
       cmaxd = 0.6;
 break;
 case 2:
       amaxd = 0.2;
       smaxd = 0.6;
       mmaxd = 0.9;
       cmaxd = 0.9;
 break;
 case 3:
       amaxd = 0.9;
       smaxd = 0.9;
       mmaxd = 0.3;
       cmaxd = 0.3;
 break;
}
//Move the weapon slots according to the selected ship
create_weaponslots();

instance_create(70, 60, obj_armorstat);
instance_create(70, 90, obj_shieldstat);
instance_create(70, 120, obj_speedstat);

playerslot_particles = part_system_create();
changeslotpart = part_type_create();
part_type_shape(changeslotpart,pt_shape_flare);
part_type_size(changeslotpart,0.30,0.30,0,0);
part_type_scale(changeslotpart,1,1);
part_type_color1(changeslotpart,7168);
part_type_alpha2(changeslotpart,1,0);
part_type_speed(changeslotpart,0,0,0,0);
part_type_direction(changeslotpart,0,359,0,0);
part_type_gravity(changeslotpart,0,270);
part_type_orientation(changeslotpart,0,0,0,0,1);
part_type_blend(changeslotpart,1);
part_type_life(changeslotpart,8,8);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_playerslot_readied))
    obj_playerslot_readied.phase = 1;
alarm[3] = 300;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bottombox.animation = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rightbox.animation = 0
alarm[1] = 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_drawit(playerslot_particles);

//Set the font and color
draw_set_font(fnt_chat);
draw_set_color(c_aqua);
draw_set_alpha(backbox.display_alpha);

//Draw stat icons
draw_sprite_ext(spr_staticons, 0, 70, 60, 1, 1, 0, c_white, backbox.display_alpha);
draw_sprite_ext(spr_staticons, 1, 70, 90, 1, 1, 0, c_white, backbox.display_alpha);
draw_sprite_ext(spr_staticons, 2, 70, 120, 1, 1, 0, c_white, backbox.display_alpha);

//Draw the stat bars
draw_sprite_ext(spr_statbar, -1, 90, 60, astretch, 1, 0, c_white, 0.7*backbox.display_alpha);
draw_sprite_ext(spr_statbar, -1, 90, 90, sstretch, 1, 0, c_white, 0.7*backbox.display_alpha);
draw_sprite_ext(spr_statbar, -1, 90, 120, mstretch, 1, 0, c_white, 0.7*backbox.display_alpha);
//Make the bars bigger if they are not yet at their max
if(astretch &lt; amaxd)
 astretch += amaxd/15;
if(sstretch &lt; smaxd)
 sstretch += smaxd/15;
if(mstretch &lt; mmaxd)
 mstretch += mmaxd/15;

 
//Draw Ship Names
draw_set_halign(fa_center);
draw_set_font(fnt_chat);
switch(global.shipselect)
{
 case 1:
      draw_text(100, 14, 'Alphastar');
 break;
 case 2:
      draw_text(100, 14, 'Swiftwing');
 break;
 case 3:
      draw_text(100, 14, 'Goliath');
 break;
}
draw_set_halign(fa_left);

//Draw guiding text
draw_text(300, 14, 'Weapons');
draw_set_alpha(1);
draw_set_font(fnt_chat);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
