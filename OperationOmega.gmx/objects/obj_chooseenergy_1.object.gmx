<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fusion_icon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>spr_needle_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This slot is not selected
growth = 0;
growing = 0;
selected = 0;

empty = -1;
if(global.esecond[1] = 0)
    empty = instance_create(x, y, obj_emptyslot);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.esecond[1] = changeselect;
if(global.esecond[2] = changeselect)
{
    global.esecond[2] = 0;
    obj_chooseenergy_2.empty = instance_create(obj_chooseenergy_2.x, obj_chooseenergy_2.y, obj_emptyslot);    
}
if(global.esecond[3] = changeselect)
{
    global.esecond[3] = 0;
    obj_chooseenergy_3.empty = instance_create(obj_chooseenergy_3.x, obj_chooseenergy_3.y, obj_emptyslot);    
}
    
if(empty != -1)
    with(empty)
        instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> selected = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Handle map display growing
if(growing = 1 &amp;&amp; growth &lt; 1)
 growth += 0.1;
if(growing = 0 &amp;&amp; growth &gt; 0)
 growth -= 0.1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 0;
alarm[3] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
alarm[3] = 20;
growing = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room = rm_profile)
{
 global.spacehot = 1;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_hotkey, 1, 0);
 exit;
}
//Exit if mod box is open
if(global.creatinggame = 1)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_hotkey, 1, 0);
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
 global.spacehot = 1;
else
{
 if(global.mymid = 0)
  send = obj_waiting;
 else
  send = obj_waiting_client;
 with(send)
 {
 //Send a message to your chat
 chatline[0] = chatline[1];
 chatcolor[0] = chatcolor[1];
 chatline[1] = chatline[2];
 chatcolor[1] = chatcolor[2];
 chatline[2] = chatline[3];
 chatcolor[2] = chatcolor[3];
 chatline[3] = chatline[4];
 chatcolor[3] = chatcolor[4];
 chatline[4] = chatline[5];
 chatcolor[4] = chatcolor[5];
 chatline[5] = chatline[6];
 chatcolor[5] = chatcolor[6];
 chatline[6] = chatline[7];
 chatcolor[6] = chatcolor[7];
 chatline[7] = chatline[8];
 chatcolor[7] = chatcolor[8];
 chatcolor[8] = c_red;
 chatline[8] = "You cannot configure your ship when ready.";
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//disable function if currently moving on a path
with(prnt_selection)
    if(speed != 0)
        exit;
if(selected = 1 || global.creatinggame = 1)
    exit;

if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//return icons accordingly
with(obj_icon_option)
{
    action = 1;
    alarm[1] = 1;
}
//Disselect all other slots
with(prnt_selection) selected = 0;
//Select this slot
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
{
    create_icon(spr_fusion_icon, 4, 0, 32, 0, 1);    
    create_icon(spr_stardust_icon, 4, 4, 32, 32, 2);    
    create_icon(spr_barrier_icon, 4, 4, 32, 64, 3);    
    create_icon(spr_formation_icon, 4, 4, 32, 96, 5);    
    create_icon(spr_beam_icon, 4, 4, 32, 128, 4);    
    create_icon(spr_sparkline_icon, 4, 0, 64, 0, 6);    
    create_icon(spr_burst_icon, 4, 4, 64, 32, 7);    
    create_icon(spr_slash_icon, 4, 4, 64, 64, 8);    
    create_icon(spr_horizon_icon, 4, 4, 64, 96, 9);    
    create_icon(spr_spiral_icon, 4, 4, 64, 128, 10);        
    create_icon(spr_laser_icon, 4, 0, 96, 0, 11);    
    create_icon(spr_trail_icon, 4, 4, 96, 32, 12);    
    create_icon(spr_reflection_icon, 4, 4, 96, 64, 13);    
    create_icon(spr_storm_icon, 4, 4, 96, 96, 14);    
    create_icon(spr_trigger_icon, 4, 4, 96, 128, 15);        
    alarm[2] = 1;
}
else
{
    if(global.mymid = 0)
        send = obj_waiting;
    else
        send = obj_waiting_client;
    with(send)
    {
        //Send a message to your chat
        chatline[0] = chatline[1];
        chatcolor[0] = chatcolor[1];
        chatline[1] = chatline[2];
        chatcolor[1] = chatcolor[2];
        chatline[2] = chatline[3];
        chatcolor[2] = chatcolor[3];
        chatline[3] = chatline[4];
        chatcolor[3] = chatcolor[4];
        chatline[4] = chatline[5];
        chatcolor[4] = chatcolor[5];
        chatline[5] = chatline[6];
        chatcolor[5] = chatcolor[6];
        chatline[6] = chatline[7];
        chatcolor[6] = chatcolor[7];
        chatline[7] = chatline[8];
        chatcolor[7] = chatcolor[8];
        chatcolor[8] = c_red;
        chatline[8] = "You cannot configure your ship when ready.";
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.primaryimage = spr_empty;
global.esecondimage[1] = spr_empty;
global.esecondimage[2] = spr_empty;
global.esecondimage[3] = spr_empty;
global.deployimage[1] = spr_empty;
global.deployimage[2] = spr_empty;
global.deployimage[3] = spr_empty;
switch(global.primary)
{
 case 1:
      global.primaryimage = spr_needle_icon;
 break;
 case 2:
      global.primaryimage = spr_sonic_icon;
 break;
 case 3:
      global.primaryimage = spr_wave_icon;
 break;
 case 4:
      global.primaryimage = spr_flank_icon;
 break;
 case 5:
      global.primaryimage = spr_stasis_icon;
 break;
 case 6:
      global.primaryimage = spr_crossfire_icon;
 break;
 case 7:
      global.primaryimage = spr_siphon_icon;
 break;
 case 8:
      global.primaryimage = spr_double_icon;
 break;
 case 9:
      global.primaryimage = spr_pierce_icon;
 break;
 case 10:
      global.primaryimage = spr_spread_icon;
 break;
}
switch(global.esecond[1])
{
 case 1:
      global.esecondimage[1] = spr_fusion_icon;
 break;
 case 2:
      global.esecondimage[1] = spr_stardust_icon;
 break;
 case 3:
      global.esecondimage[1] = spr_barrier_icon;
 break;
 case 4:
      global.esecondimage[1] = spr_beam_icon;
 break;
 case 5:
      global.esecondimage[1] = spr_formation_icon;
 break;
 case 6:
      global.esecondimage[1] = spr_sparkline_icon;
 break;
 case 7:
      global.esecondimage[1] = spr_burst_icon;
 break;
 case 8:
      global.esecondimage[1] = spr_slash_icon;
 break;
 case 9:
      global.esecondimage[1] = spr_horizon_icon;
 break;
 case 10:
      global.esecondimage[1] = spr_spiral_icon;
 break;
 case 11:
      global.esecondimage[1] = spr_laser_icon;
 break;
 case 12:
      global.esecondimage[1] = spr_trail_icon;
 break;
 case 13:
      global.esecondimage[1] = spr_reflection_icon;
 break;
 case 14:
      global.esecondimage[1] = spr_storm_icon;
 break;
 case 15:
      global.esecondimage[1] = spr_trigger_icon;
 break;
}
switch(global.esecond[2])
{
 case 1:
      global.esecondimage[2] = spr_fusion_icon;
 break;
 case 2:
      global.esecondimage[2] = spr_stardust_icon;
 break;
 case 3:
      global.esecondimage[2] = spr_barrier_icon;
 break;
 case 4:
      global.esecondimage[2] = spr_beam_icon;
 break;
 case 5:
      global.esecondimage[2] = spr_formation_icon;
 break;
 case 6:
      global.esecondimage[2] = spr_sparkline_icon;
 break;
 case 7:
      global.esecondimage[2] = spr_burst_icon;
 break;
 case 8:
      global.esecondimage[2] = spr_slash_icon;
 break;
 case 9:
      global.esecondimage[2] = spr_horizon_icon;
 break;
 case 10:
      global.esecondimage[2] = spr_spiral_icon;
 break;
 case 11:
      global.esecondimage[2] = spr_laser_icon;
 break;
 case 12:
      global.esecondimage[2] = spr_trail_icon;
 break;
 case 13:
      global.esecondimage[2] = spr_reflection_icon;
 break;
 case 14:
      global.esecondimage[2] = spr_storm_icon;
 break;
 case 15:
      global.esecondimage[2] = spr_trigger_icon;
 break;
}
switch(global.esecond[3])
{
 case 1:
      global.esecondimage[3] = spr_fusion_icon;
 break;
 case 2:
      global.esecondimage[3] = spr_stardust_icon;
 break;
 case 3:
      global.esecondimage[3] = spr_barrier_icon;
 break;
 case 4:
      global.esecondimage[3] = spr_beam_icon;
 break;
 case 5:
      global.esecondimage[3] = spr_formation_icon;
 break;
 case 6:
      global.esecondimage[3] = spr_sparkline_icon;
 break;
 case 7:
      global.esecondimage[3] = spr_burst_icon;
 break;
 case 8:
      global.esecondimage[3] = spr_slash_icon;
 break;
 case 9:
      global.esecondimage[3] = spr_horizon_icon;
 break;
 case 10:
      global.esecondimage[3] = spr_spiral_icon;
 break;
 case 11:
      global.esecondimage[3] = spr_laser_icon;
 break;
 case 12:
      global.esecondimage[3] = spr_trail_icon;
 break;
 case 13:
      global.esecondimage[3] = spr_reflection_icon;
 break;
 case 14:
      global.esecondimage[3] = spr_storm_icon;
 break;
 case 15:
      global.esecondimage[3] = spr_trigger_icon;
 break;
}
switch(global.deploy[1])
{
 case 1:
      global.deployimage[1] = spr_dualmissile_icon;
 break;
 case 2:
      global.deployimage[1] = spr_layermissile_icon;
 break;
 case 3:
      global.deployimage[1] = spr_huntermine_icon;
 break;
 case 4:
      global.deployimage[1] = spr_locustmissile_icon;
 break;
 case 5:
      global.deployimage[1] = spr_phantommine_icon;
 break;
 case 6:
      global.deployimage[1] = spr_solus_icon;
 break;
 case 7:
      global.deployimage[1] = spr_tridentmissile_icon;
 break;
 case 8:
      global.deployimage[1] = spr_shockmissile_icon;
 break;
 case 9:
      global.deployimage[1] = spr_hackermine_icon;
 break;
 case 10:
      global.deployimage[1] = spr_hermitmissile_icon;
 break;
 case 11:
      global.deployimage[1] = spr_strikemissile_icon;
 break;
 case 12:
      global.deployimage[1] = spr_strikemine_icon;
 break;
 case 13:
      global.deployimage[1] = spr_turret_icon;
 break;
 case 14:
      global.deployimage[1] = spr_splitmissile_icon;
 break;
 case 15:
      global.deployimage[1] = spr_clustermine_icon;
 break;
}
switch(global.deploy[2])
{
 case 1:
      global.deployimage[2] = spr_dualmissile_icon;
 break;
 case 2:
      global.deployimage[2] = spr_layermissile_icon;
 break;
 case 3:
      global.deployimage[2] = spr_huntermine_icon;
 break;
 case 4:
      global.deployimage[2] = spr_locustmissile_icon;
 break;
 case 5:
      global.deployimage[2] = spr_phantommine_icon;
 break;
 case 6:
      global.deployimage[2] = spr_solus_icon;
 break;
 case 7:
      global.deployimage[2] = spr_tridentmissile_icon;
 break;
 case 8:
      global.deployimage[2] = spr_shockmissile_icon;
 break;
 case 9:
      global.deployimage[2] = spr_hackermine_icon;
 break;
 case 10:
      global.deployimage[2] = spr_hermitmissile_icon;
 break;
 case 11:
      global.deployimage[2] = spr_strikemissile_icon;
 break;
 case 12:
      global.deployimage[2] = spr_strikemine_icon;
 break;
 case 13:
      global.deployimage[2] = spr_turret_icon;
 break;
 case 14:
      global.deployimage[2] = spr_splitmissile_icon;
 break;
 case 15:
      global.deployimage[2] = spr_clustermine_icon;
 break;
}
switch(global.deploy[3])
{
 case 1:
      global.deployimage[3] = spr_dualmissile_icon;
 break;
 case 2:
      global.deployimage[3] = spr_layermissile_icon;
 break;
 case 3:
      global.deployimage[3] = spr_huntermine_icon;
 break;
 case 4:
      global.deployimage[3] = spr_locustmissile_icon;
 break;
 case 5:
      global.deployimage[3] = spr_phantommine_icon;
 break;
 case 6:
      global.deployimage[3] = spr_solus_icon;
 break;
 case 7:
      global.deployimage[3] = spr_tridentmissile_icon;
 break;
 case 8:
      global.deployimage[3] = spr_shockmissile_icon;
 break;
 case 9:
      global.deployimage[3] = spr_hackermine_icon;
 break;
 case 10:
      global.deployimage[3] = spr_hermitmissile_icon;
 break;
 case 11:
      global.deployimage[3] = spr_strikemissile_icon;
 break;
 case 12:
      global.deployimage[3] = spr_strikemine_icon;
 break;
 case 13:
      global.deployimage[3] = spr_turret_icon;
 break;
 case 14:
      global.deployimage[3] = spr_splitmissile_icon;
 break;
 case 15:
      global.deployimage[3] = spr_clustermine_icon;
 break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If this slot is selected, highlight it
if(selected = 1)
 draw_sprite_ext(spr_numbers_selected, 1, x, y, 1, 1, 0, c_white, image_alpha);
//Display the correct icon in this slot
switch(global.esecond[1])
{
 case 0:
      draw_sprite_ext(spr_numbers_icon, 1, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 1:
      draw_sprite_ext(spr_fusion_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 2:
      draw_sprite_ext(spr_stardust_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 3:
      draw_sprite_ext(spr_barrier_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 4:
      draw_sprite_ext(spr_beam_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 5:
      draw_sprite_ext(spr_formation_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 6:
      draw_sprite_ext(spr_sparkline_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 7:
      draw_sprite_ext(spr_burst_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 8:
      draw_sprite_ext(spr_slash_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 9:
      draw_sprite_ext(spr_horizon_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 10:
      draw_sprite_ext(spr_spiral_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 11:
      draw_sprite_ext(spr_laser_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 12:
      draw_sprite_ext(spr_trail_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 13:
      draw_sprite_ext(spr_reflection_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 14:
      draw_sprite_ext(spr_storm_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
 case 15:
      draw_sprite_ext(spr_trigger_icon, 0, x, y, 1, 1, 0, c_white, image_alpha);
 break;
}

draw_sprite_ext(spr_numbers_icon, 3, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_numbers_icon, 5, x, y, 1, 1, 0, c_white, image_alpha);
if(growing != 0)
    draw_sprite_ext(spr_icon_select, 1, x, y, 1, 1, 0, c_white, image_alpha);
if(global.spacehot = 1)
    draw_sprite_ext(spr_numbers_icon, 9, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_weapons_infos, 1, x+16, y+16, growth, growth, 0, c_white, 0.6*growth+0.2);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
