<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_alphastar_select</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reselect = 0;
sprite_index = spr_alphastar_select;
//The image does not animate normally
image_speed = 0;
//Set the image to be rotated to the right ship

switch(global.shipselect)
{
    case 1:
        growimage = spr_alphastar;
        image_index = 0;
    break;
    case 2:
        growimage = spr_swiftwing;
        image_index = 17;
    break;
    case 3:
        growimage = spr_goliath;
        image_index = 33;
    break;
}
//Initialize animation switch
moveimage = 0;
endx = view_wview[0]-190;
growth = 0;
growing = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reselect = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check the animation switch
if(moveimage = 1)
{
 //If the switch is on, animate the image until it reaches the next selection
 if!(image_index = 0 || image_index = 17 || image_index = 33)
  image_index += 1;
 else
  moveimage = 0;
}
//Handle map display growing
if(growing = 1)
{
    if(growth &lt; 1)
       growth += 0.1;
    if(obj_customizer.attributes_alpha &lt; 1)
    {
        obj_customizer.attributes_alpha += 0.05;
        obj_customizer.weaponslots_alpha -= 0.05;
    }
}
if(growing = 0)
{
    if(growth &gt; 0)
       growth -= 0.1;
    if(obj_customizer.attributes_alpha &gt; 0)
    {
        obj_customizer.attributes_alpha -= 0.05;
        obj_customizer.weaponslots_alpha += 0.05;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 0;
image_xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
growing = 1;
image_xscale = 1.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reselect = 1)
    exit;
reselect = 1;
alarm[9] = 90;
//Check the animation switch
if(moveimage = 1 || prnt_selection.speed != 0 || global.tutorial = 1)
    //Exit to stop functions when animating
    exit;
if(global.creatinggame = 1)
    exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//return icons accordingly
with(obj_icon_option)
{
    action = 1;
    alarm[1] = 1;
}
with(prnt_selection) selected = 0;
//Select this slot
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
{
    //Reset stat bars' current sizes
    obj_customizer.astretch = 0;
    obj_customizer.sstretch = 0;
    obj_customizer.mstretch = 0;
    obj_customizer.cstretch = 0;
    moveimage = 1;
    image_index += 1;
       with(obj_choosesecondary)
       {
               alarm[1] = 60;
               x = -3000;
               if(empty != -1)
                   with(empty)
                       instance_destroy();
       }

    //Change to the correct ship, depending on the current ship shown
    var holdsecond;
    switch(global.shipselect)
    {
     case 1:
           global.shipselect = 2;
           //Set the bars' max sizes
           growimage = spr_swiftwing;
            obj_customizer.stat_power.stat_percent = 0.44;
            obj_customizer.stat_armor.stat_percent = 0.23;
            obj_customizer.stat_shield.stat_percent = 0.5;
            obj_customizer.stat_mobility.stat_percent = 0.94;
            obj_customizer.stat_skill.stat_percent = 0.67;
           if(global.spacetype = 0)
           {
                global.esecond[3] = global.esecond[2];
                global.esecond[2] = 0;
           }
           else
           {
                global.deploy[1] = global.deploy[2];
                global.deploy[2] = 0;
           }           
     break;
     case 2:
           global.shipselect = 3;
           growimage = spr_goliath;
          //Set the bars' max sizes
            obj_customizer.stat_power.stat_percent = 0.82;
            obj_customizer.stat_armor.stat_percent = 0.95;
            obj_customizer.stat_shield.stat_percent = 0.88;
            obj_customizer.stat_mobility.stat_percent = 0.21;
            obj_customizer.stat_skill.stat_percent = 0.19;

           if(global.spacetype = 0)
           {
                global.esecond[1] = global.esecond[3];
                global.esecond[3] = 0;
                global.esecond[2] = 0;
           }
           else
           {
                global.deploy[3] = global.deploy[1];
                global.deploy[1] = 0;
           }           
     break;
     case 3:
           global.shipselect = 1;
           growimage = spr_alphastar;
           //Set the bars' max sizes
            obj_customizer.stat_power.stat_percent = 0.6;
            obj_customizer.stat_armor.stat_percent = 0.5;
            obj_customizer.stat_shield.stat_percent = 0.5;
            obj_customizer.stat_mobility.stat_percent = 0.4;
            obj_customizer.stat_skill.stat_percent = 0.3;
           if(global.spacetype = 0)
           {
                global.esecond[2] = global.esecond[1];
                global.esecond[1] = 0;
           }
           else
           {
                global.deploy[2] = global.deploy[3];
                global.deploy[3] = 0;
           }           
     break;
    }
    create_weaponslots();
    effect_name();

    if(global.master = false)
    {
        clearbuffer(0);
        writebyte(17, 0);
        writebyte(global.mymid, 0);
        writebyte(global.shipselect, 0);
        sendmessage(global.host, 0, 0, 0);
    }
}
else
{
    if(global.mymid = 0)
        send = obj_waiting;
    else
        send = obj_waiting_client;
    with(send)
    {
        //Send a message to your chat
        chatline[0] = chatline[1];
        chatcolor[0] = chatcolor[1];
        chatline[1] = chatline[2];
        chatcolor[1] = chatcolor[2];
        chatline[2] = chatline[3];
        chatcolor[2] = chatcolor[3];
        chatline[3] = chatline[4];
        chatcolor[3] = chatcolor[4];
        chatline[4] = chatline[5];
        chatcolor[4] = chatcolor[5];
        chatline[5] = chatline[6];
        chatcolor[5] = chatcolor[6];
        chatline[6] = chatline[7];
        chatcolor[6] = chatcolor[7];
        chatline[7] = chatline[8];
        chatcolor[7] = chatcolor[8];
        chatcolor[8] = c_red;
        chatline[8] = "You cannot configure your ship when ready.";
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_ship_infos, global.shipselect-1, x+endx*growth, y, growth, growth, 0, c_white, 0.6*growth+0.2);
if(moveimage = 0 &amp;&amp; image_xscale &gt; 1)
    draw_sprite_ext(growimage, 0, x, y, image_xscale, image_xscale, 90, c_white, image_alpha);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(growing = 1 &amp;&amp; moveimage = 0)
draw_sprite_ext(spr_ships_mouseon, global.shipselect-1, x, y, image_xscale, image_xscale, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effect_name();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
