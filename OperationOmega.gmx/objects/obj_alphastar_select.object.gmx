<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_alphastar_select;
//The image does not animate normally
image_speed = 0;
//Set the image to be rotated to the right ship
image_index = global.shipselect*8-8;
//Initialize animation switch
moveimage = 0;
endx = view_wview[0]-136;
growth = 0;
growing = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check the animation switch
if(moveimage = 1)
{
 //If the switch is on, animate the image until it reaches the next selection
 if!(image_index = 0 || image_index = 8 || image_index = 16)
  image_index += 1;
 else
  moveimage = 0;
}
//Handle map display growing
if(growing = 1 &amp;&amp; growth &lt; 1)
 growth += 0.1;
if(growing = 0 &amp;&amp; growth &gt; 0)
 growth -= 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>growing = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.sfxtoggle = 0)
    audio_play_sound(snd_overcustom, 1, 0);
growing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check the animation switch
if(moveimage = 1 || prnt_selection.path_speed &gt; 0 || global.tutorial = 1)
 //Exit to stop functions when animating
 exit;
if(global.creatinggame = 1)
 exit;
if(global.sfxtoggle = 0)
    audio_play_sound(snd_clickcustom, 1, 0);
//return icons accordingly
with(obj_icon_option)
{
    action = 1;
    alarm[1] = 1;
}
with(prnt_selection) selected = 0;
//Select this slot
if(room = rm_profile)
{ 
 //Reset stat bars' current sizes
 obj_profilebox.astretch = 0;
 obj_profilebox.sstretch = 0;
 obj_profilebox.mstretch = 0;
 obj_profilebox.cstretch = 0;
 moveimage = 1;
 image_index += 1;
 //Change to the correct ship, depending on the current ship shown
 switch(global.shipselect)
 {
  case 1:
        global.shipselect = 2;
        global.spacehot = 0;
        //Set the bars' max sizes
        obj_profilebox.amaxd = 0.2;
        obj_profilebox.smaxd = 0.6;
        obj_profilebox.mmaxd = 0.9;
        obj_profilebox.cmaxd = 0.9;
        obj_chooseenergy_2.x = 256;
        obj_chooseenergy_3.x = 288;
        obj_choosedeploy_1.x = 336; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 336;
        obj_choosedeploy_2.x = -3000; 
        if(obj_choosedeploy_2.empty != -1)
            with(obj_choosedeploy_2.empty)
                instance_destroy();
        obj_choosedeploy_3.x = -3000;
        obj_chooseenergy_3.empty = instance_create(obj_chooseenergy_3.x, obj_chooseenergy_3.y, obj_emptyslot);    
  break;
  case 2:
        global.shipselect = 3;
        global.spacehot = 0;
       //Set the bars' max sizes
        obj_profilebox.amaxd = 0.9;
        obj_profilebox.smaxd = 0.9;
        obj_profilebox.mmaxd = 0.3;
        obj_profilebox.cmaxd = 0.3;
        obj_chooseenergy_2.x = -3000;
        if(obj_chooseenergy_2.empty != -1)
            with(obj_chooseenergy_2.empty)
                instance_destroy();
        obj_chooseenergy_3.x = -3000;
        if(obj_chooseenergy_3.empty != -1)
            with(obj_chooseenergy_3.empty)
                instance_destroy();
        obj_choosedeploy_1.x = 272; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 272;
        obj_choosedeploy_2.x = 304; 
        obj_choosedeploy_3.x = 336;
        obj_choosedeploy_2.empty = instance_create(obj_choosedeploy_2.x, obj_choosedeploy_2.y, obj_emptyslot);    
        obj_choosedeploy_3.empty = instance_create(obj_choosedeploy_3.x, obj_choosedeploy_3.y, obj_emptyslot);    
  break;
  case 3:
        global.shipselect = 1;
        global.spacehot = 0;
        //Set the bars' max sizes
        obj_profilebox.amaxd = 0.6;
        obj_profilebox.smaxd = 0.6;
        obj_profilebox.mmaxd = 0.6;
        obj_profilebox.cmaxd = 0.6;
        obj_chooseenergy_2.x = 256;
        obj_chooseenergy_3.x = -3000;
        obj_choosedeploy_1.x = 304; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 304;
        obj_choosedeploy_2.x = 336; 
        if(obj_choosedeploy_2.empty != -1)
            obj_choosedeploy_2.empty.x = 336;
        obj_choosedeploy_3.x = -3000;
        obj_chooseenergy_2.empty = instance_create(obj_chooseenergy_2.x, obj_chooseenergy_2.y, obj_emptyslot);    
  break;
 }
 exit;
}
if(obj_readygo.image_index = 1 || obj_readygo.image_index = 0)
{
 //Reset stat bars' current sizes
 obj_customizer.astretch = 0;
 obj_customizer.sstretch = 0;
 obj_customizer.mstretch = 0;
 obj_customizer.cstretch = 0;
 moveimage = 1;
 image_index += 1;
 //Change to the correct ship, depending on the current ship shown
switch(global.shipselect)
 {
  case 1:
        global.shipselect = 2;
        global.spacehot = 0;
        //Set the bars' max sizes
        obj_profilebox.amaxd = 0.2;
        obj_profilebox.smaxd = 0.6;
        obj_profilebox.mmaxd = 0.9;
        obj_profilebox.cmaxd = 0.9;
        obj_chooseenergy_2.x = 243;
        obj_chooseenergy_3.x = 279;
        obj_choosedeploy_1.x = 333; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 333;
        obj_choosedeploy_2.x = -3000; 
        if(obj_choosedeploy_2.empty != -1)
            with(obj_choosedeploy_2.empty)
                instance_destroy();
        obj_choosedeploy_3.x = -3000;
        obj_chooseenergy_3.empty = instance_create(obj_chooseenergy_3.x, obj_chooseenergy_3.y, obj_emptyslot);    
        global.deploy[2] = 0;
  break;
  case 2:
        global.shipselect = 3;
        global.spacehot = 0;
       //Set the bars' max sizes
        obj_profilebox.amaxd = 0.9;
        obj_profilebox.smaxd = 0.9;
        obj_profilebox.mmaxd = 0.3;
        obj_profilebox.cmaxd = 0.3;
        obj_chooseenergy_2.x = -3000;
        if(obj_chooseenergy_2.empty != -1)
            with(obj_chooseenergy_2.empty)
                instance_destroy();
        obj_chooseenergy_3.x = -3000;
        if(obj_chooseenergy_3.empty != -1)
            with(obj_chooseenergy_3.empty)
                instance_destroy();
        obj_choosedeploy_1.x = 261; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 261;
        obj_choosedeploy_2.x = 297; 
        obj_choosedeploy_3.x = 333;
        obj_choosedeploy_2.empty = instance_create(obj_choosedeploy_2.x, obj_choosedeploy_2.y, obj_emptyslot);    
        obj_choosedeploy_3.empty = instance_create(obj_choosedeploy_3.x, obj_choosedeploy_3.y, obj_emptyslot);    
        global.esecond[2] = 0;
        global.esecond[3] = 0;
  break;
  case 3:
        global.shipselect = 1;
        global.spacehot = 0;
        //Set the bars' max sizes
        obj_profilebox.amaxd = 0.6;
        obj_profilebox.smaxd = 0.6;
        obj_profilebox.mmaxd = 0.6;
        obj_profilebox.cmaxd = 0.6;
        obj_chooseenergy_2.x = 243;
        obj_chooseenergy_3.x = -3000;
        obj_choosedeploy_1.x = 297; 
        if(obj_choosedeploy_1.empty != -1)
            obj_choosedeploy_1.empty.x = 297;
        obj_choosedeploy_2.x = 333; 
        if(obj_choosedeploy_2.empty != -1)
            obj_choosedeploy_2.empty.x = 333;
        obj_choosedeploy_3.x = -3000;
        if(obj_choosedeploy_3.empty != -1)
            with(obj_choosedeploy_3.empty)
                instance_destroy();
        obj_chooseenergy_2.empty = instance_create(obj_chooseenergy_2.x, obj_chooseenergy_2.y, obj_emptyslot);    
        global.deploy[2] = 0;
        global.deploy[3] = 0;
  break;
 }
 if(global.master = false)
 {
  clearbuffer(0);
  writebyte(17, 0);
  writebyte(global.mymid, 0);
  writebyte(global.shipselect, 0);
  sendmessage(global.host, 0, 0, 0);
 }
}
else
{
  if(global.mymid = 0)
  send = obj_waiting;
 else
  send = obj_waiting_client;
 with(send)
 {
 //Send a message to your chat
 chatline[0] = chatline[1];
 chatcolor[0] = chatcolor[1];
 chatline[1] = chatline[2];
 chatcolor[1] = chatcolor[2];
 chatline[2] = chatline[3];
 chatcolor[2] = chatcolor[3];
 chatline[3] = chatline[4];
 chatcolor[3] = chatcolor[4];
 chatline[4] = chatline[5];
 chatcolor[4] = chatcolor[5];
 chatline[5] = chatline[6];
 chatcolor[5] = chatcolor[6];
 chatline[6] = chatline[7];
 chatcolor[6] = chatcolor[7];
 chatline[7] = chatline[8];
 chatcolor[7] = chatcolor[8];
 chatcolor[8] = c_red;
 chatline[8] = "You cannot configure your ship when ready.";
 }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, 0, c_white, image_alpha);
draw_sprite_ext(spr_ship_infos, global.shipselect-1, x+endx*growth, y, growth, growth, 0, c_white, 0.6*growth+0.2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(growing = 1 &amp;&amp; moveimage = 0)
draw_sprite_ext(spr_ships_mouseon, global.shipselect-1, x, y, 1, 1, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
