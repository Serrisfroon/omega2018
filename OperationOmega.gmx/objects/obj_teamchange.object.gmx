<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_teamchange</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>prnt_selection</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_teamchange;
//Initialize the press limit variable
changeable = 0;      
rotate = 0;
rotation = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You can press the button again
changeable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(rotate = 1)
{
 rotation += 6;
 image_angle += 6;
 if(rotation = 180)
 {
  rotation = 0;
  rotate = 0;
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.creatinggame = 1)
 exit;
//Check to see if you had changed recently
if(changeable = 0)
 {
    if(global.sfxtoggle = 0)
        audio_play_sound(snd_clicktext, 1, 0);
  //Flag it and set a time until next change allowed
  changeable = 1;
  alarm[0] = 30;
  rotate = 1;
 
  //Red team going blue
  if(global.team[global.mymid] = 1) 
  {
   //Check if blue team has too many
   if(global.blueteam &gt;= ceil((ds_list_size(global.clients)+1)/2)+1)
   {
    with(obj_waiting)
    {
     //Send a message to only your chat
     chatline[0] = chatline[1];
     chatcolor[0] = chatcolor[1];
     chatline[1] = chatline[2];
     chatcolor[1] = chatcolor[2];
     chatline[2] = chatline[3];
     chatcolor[2] =chatcolor[3];
     chatline[3] = chatline[4];
     chatcolor[3] = chatcolor[4];
     chatline[4] = chatline[5];
     chatcolor[4] = chatcolor[5];
     chatline[5] = chatline[6];
     chatcolor[5] = chatcolor[6];
     chatline[6] = chatline[7];
     chatcolor[6] = chatcolor[7];
     chatline[7] = chatline[8];
     chatcolor[7] = chatcolor[8];
     chatcolor[8] = c_maroon;
     chatline[8] = "Blue Team cannot accept any more players.";
    }
    //You can't change team
    exit;
   }
   
   //If blue team has room, change team
   global.team[global.mymid] = 2;
   //Update team numbers
   global.redteam -= 1;
   global.blueteam += 1;
  }
  else 
  {
   //Blue team going red
   //Check to see if red team has room
   if(global.redteam &gt;= ceil((ds_list_size(global.clients)+1)/2)+1)
   {
    with(obj_waiting)
    {
     //Send a message to your chat
     chatline[0] = chatline[1];
     chatcolor[0] = chatcolor[1];
     chatline[1] = chatline[2];
     chatcolor[1] = chatcolor[2];
     chatline[2] = chatline[3];
     chatcolor[2] = chatcolor[3];
     chatline[3] = chatline[4];
     chatcolor[3] = chatcolor[4];
     chatline[4] = chatline[5];
     chatcolor[4] = chatcolor[5];
     chatline[5] = chatline[6];
     chatcolor[5] = chatcolor[6];
     chatline[6] = chatline[7];
     chatcolor[6] = chatcolor[7];
     chatline[7] = chatline[8];
     chatcolor[7] = chatcolor[8];
     chatcolor[8] = c_maroon;
     chatline[8] = "Red Team cannot accept any more players.";
    }
    //You can't change teams
    exit;
   }
   
   //If red team has room, change team
   global.team[global.mymid] = 1;
   //Update team numbers
   global.redteam += 1;
   global.blueteam -= 1;
  }
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>31,31</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
