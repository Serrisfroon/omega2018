<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboard_string = '';
mouseover = 0;
alpha = 0;
if(global.outcome = 0)
{
    message = "Operation Successful";
    if(global.team[global.mymid] = 1)
        messagecolor = c_red;
    else
        messagecolor = c_navy;    
}
else    
{
    message = "Operation Failed";
    if(global.team[global.mymid] = 1)
        messagecolor = c_navy;
    else
        messagecolor = c_red;    
}
for(i = 0; i &lt; 8; i += 1)
    global.damagedealt[i] = round(global.damagedealt[i]);
global.damagetaken[global.mymid] = round(global.damagetaken[global.mymid]);

if(global.master = true)
{
    instance_create(0, 0, obj_waiting);
    clearbuffer(0);
    writebyte(18, 0);
    writebyte(global.mymid, 0);
    for(i = 0; i &lt; 8; i += 1)
    {
        if(i = global.mymid)
        {
            writebyte(0, 0);
            writeshort(0, 0);
        }
        else
        {
            writebyte(global.assists[i], 0);
            writeshort(global.damagedealt[i], 0);
        }
    }
    writeshort(global.damagetaken[global.mymid], 0);
    writebyte(global.walldeaths, 0);
    writeshort(global.walldamage, 0);
    
    client_sendall(0, 0);
}
else
{
    instance_create(0, 0, obj_waiting_client);
    clearbuffer(0);
    writebyte(18, 0);
    writebyte(global.mymid, 0);
    for(i = 0; i &lt; 8; i += 1)
    {
        if(i = global.mymid)
        {
            writebyte(0, 0);
            writeshort(0, 0);
        }
        else
        {
            writebyte(global.assists[i], 0);
            writeshort(global.damagedealt[i], 0);
        }
    }
    writeshort(global.damagetaken[global.mymid], 0);
    writebyte(global.walldeaths, 0);
    writeshort(global.walldamage, 0);
    
    sendmessage(global.host, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouseover = 0;
if(mouse_y &gt; 14 &amp;&amp; mouse_y &lt; 280)
{
    if(mouse_x &gt; 362 &amp;&amp; mouse_x &lt; 434)
        mouseover = 1;
    if(mouse_x &gt; 442 &amp;&amp; mouse_x &lt; 514)
        mouseover = 2;
    if(mouse_x &gt; 522 &amp;&amp; mouse_x &lt; 594)
        mouseover = 3;
    if(mouse_x &gt; 602 &amp;&amp; mouse_x &lt; 674)
        mouseover = 4;
    if(mouse_x &gt; 682 &amp;&amp; mouse_x &lt; 754)
        mouseover = 5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_digital);
alpha = obj_menumod.backalpha;
draw_set_alpha(alpha);
draw_sprite_ext(spr_breakline, -1, 358, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_staticons, 4, 392, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_breakline, -1, 438, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_staticons, 5, 472, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_breakline, -1, 518, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_staticons, 6, 552, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_breakline, -1, 598, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_staticons, 7, 632, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_breakline, -1, 678, 14, 1, 1, 0, c_white, alpha);
draw_sprite_ext(spr_staticons, 10, 712, 14, 1, 1, 0, c_white, alpha);

draw_set_halign(fa_center);

draw_text_bordered(96, 32, message, 1, 1, messagecolor);

for(i = 0; i &lt; 8; i += 1)
{
    if(global.activated[i] = 0 &amp;&amp; i &gt; 0) continue;
        switch(global.team[i])
        {
            case 1:
                 draw_set_color(c_red);
            break;
            case 2:
                 draw_set_color(c_navy);
            break;
        }
    draw_text(288, 36+i*26, global.othername[i]);
    draw_text(400, 36+i*26, string(global.kills[i]));
    draw_text(480, 36+i*26, string(global.deaths[i]));
    draw_text(560, 36+i*26, string(global.assists[i]));
    draw_text(640, 36+i*26, string(global.damagedealt[i]));
    draw_text(720, 36+i*26, string(global.damagetaken[i]));
}

draw_set_color(c_black);
draw_text(288, 244, "Walls");
draw_text(400, 244, string(global.walldeaths));
draw_text(480, 244, "0");
draw_text(560, 244, "0");
draw_text(640, 244, string(global.walldamage));
draw_text(720, 244, "0");

draw_set_halign(fa_left);

if(mouseover &gt; 0)
    draw_sprite(spr_matchstats, mouseover-1, mouse_x, mouse_y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
