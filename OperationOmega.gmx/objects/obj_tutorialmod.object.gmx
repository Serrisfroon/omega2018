<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Show only this image
image_single = 1;
//Create this object invisible
image_alpha = 0;
text_alpha = 0;
//Initialize stage variable
cancel = 0;
textcancel = 0;
//Initialize creation check
creategamenow = 0;
askagain = 0;
retry  = 0;
boxx = x;
boxy = y;
switch(room)
{
    case rm_multiplayer:
        showtext = "Welcome to Operation Omega. This tutorial will help you understand how to navigate the menu and play the game. Left click anywhere to move through the tutorial.";
        textnumber = 1;
        boxy = 150;
        window_mouse_set(view_wview[0]/2, view_hview[0]/2);
    break;
    case rm_profile:
        showtext = "This is the Profile Menu. Here, you can customzie your ship, change your name, view your IP Address, and practice.";
        textnumber = 6;
        window_mouse_set(512, 336);
    break;
}
x = mouse_x;
y = mouse_y;
global.creatinggame = 0;
sprite_index = spr_tutorialbox;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tutorial = 0;
with(obj_gotopractice)
    event_perform(ev_mouse, ev_left_press);
global.tutorial = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text_alpha = 0;
switch(textnumber)
{
    case 14:
        showtext = "The next ship is the Swiftwing. It's very fragile, but is the most mobile with a high speed and a warp ability."
    break;
    case 17:
        showtext = "The final ship is the Goliath. It's immobile, but very durable. It also can regenerate Deploy Secondary stock- we'll come back to this later. "
    break;
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tutorial = 0;
with(obj_profiles)
    event_perform(ev_mouse, ev_left_press);
global.tutorial = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_mouse_set(x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_mouse_set(x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_mouse_set(x, y);
//Make the popup appear
if(image_alpha &lt; 1 &amp;&amp; cancel = 0)
 image_alpha += 0.2;
//Make the popup disappear when the button is pressed
if(image_alpha &gt; 0 &amp;&amp; cancel = 1)
 image_alpha -= 0.2;
//Make the text appear
if(text_alpha &lt; 1 &amp;&amp; textcancel = 0)
 text_alpha += 0.2;
//Make the text disappear when the button is pressed
if(text_alpha &gt; 0 &amp;&amp; textcancel = 1)
 text_alpha -= 0.2;


//check if the popup has fully disappeared
if(text_alpha = 0 &amp;&amp; textcancel = 1)
{
        textcancel = 0;
        textnumber += 1;   
        switch(textnumber)
        {
            case 2:
                showtext = "The mouse will be controlled as you go through the tutorial. Just follow along and read to get the most out of it.";            
            break;
            case 3:
                showtext = "All menu items are controlled by left clicking them. Let's start by going to the Profile Menu. ";            
            break;
            case 4:
                textcancel = 1;
                cancel = 1;
                move_towards_point(obj_profiles.x, obj_profiles.y, 15);
            break;
            //Profile
            case 7:
                showtext = "We'll start by looking at the different ships available to use.";            
            break;
            case 8:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_alphastar_select.x, obj_alphastar_select.y, 16);
            break;
            case 11:
                showtext = "The ship is never a bad choice for a fight, as it can adapt to any situation. You can read more about it at the right. ";            
            break;
            case 12:
                showtext = "Next to the ship selection are the ship's stats. From the top going down, the stats are Armor, Shield, Speed, and Handling.";            
            break;
            case 13:
                textcancel = 1;
                showtext = "";
                global.tutorial = 0;
                with(obj_alphastar_select)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
                alarm[1] = 15;
            break;
            case 15:
                showtext = "It may take a while to really master the ship, as any needless mistakes can cost you a lot. You can read more about it at the right.";            
            break;
            case 16:
                textcancel = 1;
                showtext = "";
                global.tutorial = 0;
                with(obj_alphastar_select)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
                alarm[1] = 15;
            break;
            case 18:
                showtext = "It's not overly hard to use, but certain weapons or playstyles counter it very well. You can read more about it at the right.";            
            break;
            case 19:
                textcancel = 1;
                showtext = "For now, we'll select the Alphastar. Let's take a look at weapons next.";
                global.tutorial = 0;
                with(obj_alphastar_select)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
            break;
            case 21:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_chooseprimary.x+12, obj_chooseprimary.y+12, 16);
            break;
            case 24:
                textcancel = 1;
                showtext = "Clicking a weapon slot shows you all weapons available to it.";
                global.tutorial = 0;
                with(obj_chooseprimary)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
            break;
            case 26:
                showtext = "Let's take a look at Needle- a basic yet strong primary.";            
            break;
            case 27:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_needle_icon.x+12, obj_needle_icon.y+12, 16);
            break;
            case 30:
                showtext = "Dmg is the damage a single shot will do. Rate is the delay between shots- lower rate is faster. Spd is the speed the bullets travel.";            
            break;
            case 31:
                textcancel = 1;
                showtext = "We'll go ahead and keep Needle as our Primary Weapon.";            
                global.tutorial = 0;
                with(obj_needle_icon)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
            break;
            case 33:
                showtext = "Let's move to the next weapon type- Energy Secondaries. They create unique bullet patterns, etc.";            
            break;
            case 34:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_chooseenergy_2.x+12, obj_chooseenergy_2.y+12, 16);
            break;
            case 37:
                showtext = "Let's look at Formation- a beginner-friendly weapon that is strong at any skill level.";            
            break;
            case 38:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_formation_icon.x+12, obj_formation_icon.y+12, 16);
            break;
            case 41:
                showtext = "You'll also notice that it says 'Requires Lock-On'. There are many weapons with this- it will be explained later.";            
            break;
            case 42:
                textcancel = 1;
                showtext = "Let's go ahead and equip Formation now.";            
                global.tutorial = 0;
                with(obj_formation_icon)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
            break;
            case 44:
                showtext = "Finally, there is Deploy Secondaries. This weapon type consists of missiles, mines, and turrets. Most have some damage that ignores shield.";            
            break;
            case 45:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_choosedeploy_2.x+12, obj_choosedeploy_2.y+12, 16);
            break;
            case 48:
                showtext = "We'll be looking at Hunter Mine. It's a mine that will move towards enemies once placed.";            
            break;
            case 49:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_huntermine_icon.x+12, obj_huntermine_icon.y+12, 16);
            break;
            case 52:
                showtext = "Penetration damage is the amount of damage that will ignore the shield. Also note that Goliath can regenerate deploy stock.";            
            break;
            case 53:
                textcancel = 1;
                showtext = "We'll equip Hunter Mine. That covers all our weapons and our ship.";            
                global.tutorial = 0;
                with(obj_huntermine_icon)
                    event_perform(ev_mouse, ev_left_press);
                global.tutorial = 1;            
            break;
            case 55:
                showtext = "There's one last thing we need to do- hotkey a weapon. This will make a weapon you plan on using a lot, easier to use in game.";            
            break;
            case 56:
                showtext = "This is very important to do when using the Alphastar, as its passive ability afects only the hotkeyed weapon.";            
            break;
            case 57:
                showtext = "We're going to hotkey Formation. Alphastar's passive will make it shoot faster.";            
            break;
            case 58:
                textcancel = 1;
                showtext = "";
                move_towards_point(obj_chooseenergy_2.x+12, obj_chooseenergy_2.y+12, 16);
            break;
            case 61:
                showtext = "That wraps up the Profile Menu. From here, we'll enter practice mode. There, you can test out these weapons.";            
            break;
            case 62:
                showtext = "Remember that you can always change your ship customization here or in a match waiting room. Be sure to try out different weapons.";            
            break;
            case 63:
                textcancel = 1;
                cancel = 1;
                showtext = "";
                move_towards_point(obj_gotopractice.x+12, obj_gotopractice.y+12, 16);
            break;
        }     
}
switch(textnumber)
{
    case 5:
        if(point_distance(x, y, obj_profiles.x, obj_profiles.y) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_profiles.x;
            y = obj_profiles.y;
            alarm[0] = 30;
        }
    break;
    case 9:
        if(point_distance(x, y, obj_alphastar_select.x, obj_alphastar_select.y) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_alphastar_select.x;
            y = obj_alphastar_select.y;
            text_alpha = 0;
            showtext = "The first ship is the Alphastar. It's a balanced ship that can make a weapon stronger than normal through its passive ability."
        }
    break;
    case 22:
        if(point_distance(x, y, obj_chooseprimary.x+12, obj_chooseprimary.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_chooseprimary.x+12;
            y = obj_chooseprimary.y+12;
            text_alpha = 0;
            showtext = "We'll look at primary weapons first. They are rapid-fire weapons meant to be used constantly."
        }
    break;
    case 28:
        if(point_distance(x, y, obj_needle_icon.x+12, obj_needle_icon.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_needle_icon.x+12;
            y = obj_needle_icon.y+12;
            text_alpha = 0;
            showtext = "When holding the mouse over a weapon icon, information on the weapon is shown."
        }
    break;
    case 35:
        if(point_distance(x, y, obj_chooseenergy_2.x+12, obj_chooseenergy_2.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_chooseenergy_2.x+12;
            y = obj_chooseenergy_2.y+12;
            text_alpha = 0;
            showtext = "The Alphastar can equip two Energy Secondaries, but we'll only be changing this one."
            global.tutorial = 0;
            with(obj_chooseenergy_2)
                event_perform(ev_mouse, ev_left_press);
            global.tutorial = 1;            
        }
    break;
    case 39:
        if(point_distance(x, y, obj_formation_icon.x+12, obj_formation_icon.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_formation_icon.x+12;
            y = obj_formation_icon.y+12;
            text_alpha = 0;
            showtext = "Dmg is the damage a single bullet from the weapon does. Energy is how much energy the weapon takes to use."
        }
    break;
    case 46:
        if(point_distance(x, y, obj_choosedeploy_2.x+12, obj_choosedeploy_2.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_choosedeploy_2.x+12;
            y = obj_choosedeploy_2.y+12;
            text_alpha = 0;
            showtext = "The Alphastar can equip two Deploy Secondaries as well. Again, we'll only be changing one of these weapons."
            global.tutorial = 0;
            with(obj_choosedeploy_2)
                event_perform(ev_mouse, ev_left_press);
            global.tutorial = 1;            
        }
    break;
    case 50:
        if(point_distance(x, y, obj_huntermine_icon.x+12, obj_huntermine_icon.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_huntermine_icon.x+12;
            y = obj_huntermine_icon.y+12;
            text_alpha = 0;
            showtext = "Stock is the number times you can use the weapon per life. Dmg is the amount of damage each shot will do. Pen is the penetration damage."
        }
    break;
    case 59:
        if(point_distance(x, y, obj_chooseenergy_2.x+12, obj_chooseenergy_2.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_chooseenergy_2.x+12;
            y = obj_chooseenergy_2.y+12;
            text_alpha = 0;
            showtext = "Right clicking a weapon slot will hotkey it."
            global.tutorial = 0;
            with(obj_chooseenergy_2)
                event_perform(ev_mouse, ev_right_press);
            global.tutorial = 1;            
        }
    break;
    case 64:
        if(point_distance(x, y, obj_gotopractice.x+12, obj_gotopractice.y+12) &lt; 16)
        {
            textnumber += 1;
            speed = 0;
            x = obj_gotopractice.x+12;
            y = obj_gotopractice.y+12;
            text_alpha = 0;
            showtext = ""
            alarm[2] = 30;       
        }
    break;
}     

//If the text entered is over 25 characters long, reduce it to 25
if(string_length(keyboard_string) &gt; 15)
keyboard_string = string_copy(keyboard_string, 0, 15);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_alpha != 1 || cancel = 1 || textcancel = 1 || text_alpha != 1 || showtext = "" || speed != 0)
    exit;
textcancel = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_digital);
//Draw the popup
draw_sprite_ext(sprite_index, 0, boxx, boxy, 1, 1, 0, c_white, image_alpha);
draw_set_color(c_black);
//Draw the entered text
draw_set_alpha(min(text_alpha, image_alpha));
draw_text_ext(boxx-142, boxy-52, showtext, -1, 280);
draw_set_alpha(1);
draw_sprite_ext(spr_cursor,0,mouse_x,mouse_y,0.7,0.7,global.rot1,c_white,0.7);
draw_sprite_ext(spr_cursor,1,mouse_x,mouse_y,0.7,0.7,global.rot2,c_white,0.7);
draw_sprite_ext(spr_cursor,2,mouse_x,mouse_y,0.7,0.7,global.rot3,c_white,0.7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(string_length(keyboard_string) &lt; 3 || cancel = 1)
    exit;
cancel = 1;
global.myname = keyboard_string;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
