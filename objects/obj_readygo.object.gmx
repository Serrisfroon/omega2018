<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_menubutton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_readygo;
//Set initial ready status
image_speed = 0;
if(global.master = true)
 image_index = 0;
else
 image_index = 1;
//Set initial ready status of everyone
global.readied[1] = 0;
global.readied[2] = 0;
global.readied[3] = 0;
global.readied[4] = 0;
global.readied[5] = 0;
global.readied[6] = 0;
global.readied[7] = 0;
global.readied[8] = 0;
go = 0;
changeable = 0;
switch(global.resolution)
{
 case 3:
      x += 107;
 break;
 case 4:
      x += 64;
 break;
}       

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You can press the button again
changeable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.creatinggame = 1 &amp;&amp; global.master = true)
 exit;
if(changeable = 1 || obj_menumod.dimalpha &gt; 0) exit;
changeable = 1;
alarm[0] = 30;

//Check if the button is full size
if(scale &lt; 1)
 exit;
//Check if your weapons are equipped
if(global.primary = 0 || global.esecond[1] = 0 || global.deploy[1] = 0 ||
(global.shipselect = 1 &amp;&amp; (global.esecond[2] = 0 || global.deploy[2] = 0) ) ||
(global.shipselect = 2 &amp;&amp; (global.esecond[2] = 0 || global.esecond[3] = 0) ) ||
(global.shipselect = 3 &amp;&amp; (global.deploy[2] = 0 || global.deploy[3] = 0) ) )
{
 with(obj_waiting)
 {
  //Send a message to your chat
  chatline[0] = chatline[1];
  chatcolor[0] = chatcolor[1];
  chatline[1] = chatline[2];
  chatcolor[1] = chatcolor[2];
  chatline[2] = chatline[3];
  chatcolor[2] = chatcolor[3];
  chatline[3] = chatline[4];
  chatcolor[3] = chatcolor[4];
  chatline[4] = chatline[5];
  chatcolor[4] = chatcolor[5];
  chatline[5] = chatline[6];
  chatcolor[5] = chatcolor[6];
  chatline[6] = chatline[7];
  chatcolor[6] = chatcolor[7];
  chatline[7] = chatline[8];
  chatcolor[7] = chatcolor[8];
  chatcolor[8] = c_red;
  chatline[8] = "You must configure your ship.";
 }
 exit;
} 
if(global.master = false)
{
 with(prnt_selection) selected = 0;
 //If you are a client, this button will be used to change
 //your ready status
 switch(image_index)
 {
  //If you are not ready, change to ready and send the
  //info to the host
  case 1:
        if(global.sfxtoggle = 0)
            sound_play(snd_readyup);
       clearbuffer(0);
       writebyte(13, 0);
       writestring(global.name+" is ready.", 0);
       writebyte(global.mymid, 0);
       writebyte(global.shipselect, 0);
       writebyte(global.primary, 0);
       writebyte(2, 0);
       sendmessage(global.host, 0, 0, 0);
       image_index = 2;
  break;
  //If you are ready, change to not ready and send the
  //info to the host
  case 2:
       clearbuffer(0);
       writebyte(13, 0);
       writestring(global.name+" is not ready.", 0);
       writebyte(global.mymid, 0);
       writebyte(global.shipselect, 0);
       writebyte(global.primary, 0);
       writebyte(1, 0);
       sendmessage(global.host, 0, 0, 0);
       image_index = 1; 
  break;
 }
}
else
{
 //If you are the host, this button will be used
 //to start the game
 //Check to make sure you are not alone
 if(ds_list_size(global.clients) = 0)
 {
  //Send a notice to your chat
  with(obj_waiting)
  {
   chatline[0] = chatline[1];
   chatcolor[0] = chatcolor[1];
   chatline[1] = chatline[2];
   chatcolor[1] = chatcolor[2];
   chatline[2] = chatline[3];
   chatcolor[2] = chatcolor[3];
   chatline[3] = chatline[4];
   chatcolor[3] = chatcolor[4];
   chatline[4] = chatline[5];
   chatcolor[4] = chatcolor[5];
   chatline[5] = chatline[6];
   chatcolor[5] = chatcolor[6];
   chatline[6] = chatline[7];
   chatcolor[6] = chatcolor[7];
   chatline[7] = chatline[8];
   chatcolor[7] = chatcolor[8];
   chatcolor[8] = c_red;
   chatline[8] = "You cannot start a game alone.";
  }
  //Exit the script
  exit;
 }
 go = 0;
 //Check to see if all players are ready
 for(i = 1; i &lt; 8; i += 1)
 {
  if(global.readied[i] = 2 || global.activated[i] &lt;= 0 )
   go += 1;
 }
 //If all players are ready, send the message to
 //all clients to start the game
 if(go = 7)
 {
    if(global.gameslist = 1)
    {
        global.createtime = get_servertime();
        sql_modify(global.myipaddress, global.createtime, global.maxplayers, global.playercount, global.matchtype, global.shortlevel, "In%20Game");
    }
  clearbuffer(0);
  writebyte(15, 0);
  global.randommap = random_map();
  
  writebyte(global.randommap, 0); 
  for(i = 0; i &lt; 8; i += 1)
  {
   writebyte(global.lolship[i], 0);
   writebyte(global.playerprimary[i], 0);
  }
  client_sendall(0, 0);
  obj_menumod.alarm[3] = 25;
  with(prnt_menubutton)
   animation = 1;
  obj_menumod.animation = 1;
 }
 else
 {
  //If there are clients not ready, send a notice
  //to your chat and all clients
  with(obj_waiting)
  {
   chatline[0] = chatline[1];
   chatcolor[0] = chatcolor[1];
   chatline[1] = chatline[2];
   chatcolor[1] = chatcolor[2];
   chatline[2] = chatline[3];
   chatcolor[2] = chatcolor[3];
   chatline[3] = chatline[4];
   chatcolor[3] = chatcolor[4];
   chatline[4] = chatline[5];
   chatcolor[4] = chatcolor[5];
   chatline[5] = chatline[6];
   chatcolor[5] = chatcolor[6];
   chatline[6] = chatline[7];
   chatcolor[6] = chatcolor[7];
   chatline[7] = chatline[8];
   chatcolor[7] = chatcolor[8];
   chatcolor[8] = c_red;
   chatline[8] = "All players are not yet ready.";
  }
  clearbuffer(0);
  writebyte(16, 0);
  client_sendall(0, 0);
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
