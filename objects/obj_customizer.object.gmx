<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This object will create host-client specific objects for this room
if(global.master = true)
{
 instance_create(0, 0, obj_waiting);
 instance_create(592, 352, obj_teamchange);
}
else
{
 instance_create(0, 0, obj_waiting_client);
 instance_create(592, 352, obj_teamchange_client);
}

//Initialize the bars' current sizes
astretch = 0;
sstretch = 0;
mstretch = 0;
cstretch = 0;
//Initialize the bars' max sizes
switch(global.shipselect)
{
 case 1:
       amaxd = 0.6;
       smaxd = 0.6;
       mmaxd = 0.6;
       cmaxd = 0.6;
 break;
 case 2:
       amaxd = 0.2;
       smaxd = 0.6;
       mmaxd = 0.9;
       cmaxd = 0.9;
 break;
 case 3:
       amaxd = 0.9;
       smaxd = 0.9;
       mmaxd = 0.3;
       cmaxd = 0.3;
 break;
}

//Move the weapon slots according to the selected ship
switch(global.shipselect)
{
 case 1:
 obj_chooseenergy_2.x = 256;
 obj_chooseenergy_3.x = -3000;
 obj_choosedeploy_1.x = 304; 
 obj_choosedeploy_2.x = 336; 
 obj_choosedeploy_3.x = -3000;
 break;
 case 2:
 obj_chooseenergy_2.x = 256;
 obj_chooseenergy_3.x = 288;
 obj_choosedeploy_1.x = 336; 
 obj_choosedeploy_2.x = -3000; 
 obj_choosedeploy_3.x = -3000;
 break;
 case 3:
 obj_chooseenergy_2.x = -3000;
 obj_chooseenergy_3.x = -3000;
 obj_choosedeploy_1.x = 272; 
 obj_choosedeploy_2.x = 304; 
 obj_choosedeploy_3.x = 336;
 break;
}

instance_create(48, 35, obj_armorstat);
instance_create(48, 55, obj_shieldstat);
instance_create(48, 75, obj_speedstat);
instance_create(48, 95, obj_handlingstat);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the font and color
draw_set_font(fnt_digital);
draw_set_color(c_black);
draw_set_alpha(background_alpha[1]);

//Draw stat icons
draw_sprite_ext(spr_staticons, 0, 48, 35, 1, 1, 0, c_white, background_alpha[1]);
draw_sprite_ext(spr_staticons, 1, 48, 55, 1, 1, 0, c_white, background_alpha[1]);
draw_sprite_ext(spr_staticons, 2, 48, 75, 1, 1, 0, c_white, background_alpha[1]);
draw_sprite_ext(spr_staticons, 3, 48, 95, 1, 1, 0, c_white, background_alpha[1]);

//Draw the stat bars
draw_sprite_ext(spr_statbar, -1, 72, 35, astretch, 1, 0, c_white, 0.7*background_alpha[1]);
draw_sprite_ext(spr_statbar, -1, 72, 55, sstretch, 1, 0, c_white, 0.7*background_alpha[1]);
draw_sprite_ext(spr_statbar, -1, 72, 75, mstretch, 1, 0, c_white, 0.7*background_alpha[1]);
draw_sprite_ext(spr_statbar, -1, 72, 95, cstretch, 1, 0, c_white, 0.7*background_alpha[1]);
//Make the bars bigger if they are not yet at their max
if(astretch &lt; amaxd)
 astretch += amaxd/15;
if(sstretch &lt; smaxd)
 sstretch += smaxd/15;
if(mstretch &lt; mmaxd)
 mstretch += mmaxd/15;
if(cstretch &lt; cmaxd)
 cstretch += cmaxd/15;
 
//Draw Ship Names
switch(global.shipselect)
{
 case 1:
      draw_text(64, 6, 'Alphastar');
 break;
 case 2:
      draw_text(64, 6, 'Swiftwing');
 break;
 case 3:
      draw_text(64, 6, 'Goliath');
 break;
}

//Draw guiding text
draw_text(228, 6, 'Weapons');
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
