<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sparkline_line</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prnt_primary</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show = 0;
alarm[1] = 1;
alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mid = global.mymid)
{
 if(instance_exists(obj_practiceship))
  source = obj_practiceship;
 else 
  source = obj_ship;
}
else
 source = global.playership[mid];

//If there is shield left, create effect
if(global.playership[targetmid].shieldup = 1)
{
 hurt = instance_create(0, 0, obj_hit);
 hurt.hitdir = point_direction(global.playership[targetmid].x, global.playership[targetmid].y, source.x, source.y);
 hurt.hurting = global.playership[targetmid];
}
show = 1;
effect_create_above(ef_ring, source.x, source.y, 0, c_aqua);
effect_create_above(ef_ring, global.playership[targetmid].x, global.playership[targetmid].y, 0, c_aqua);
part_type_color1(obj_partsystem.primarypart, c_aqua);
part_type_speed(obj_partsystem.primarypart,1.68,2.40,-0.04,0);
part_type_direction(obj_partsystem.primarypart,0,359,0,0);
part_particles_create(obj_partsystem.system, global.playership[targetmid].x, global.playership[targetmid].y, obj_partsystem.primarypart, 7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show = 0) exit;
if(!instance_exists(source)) exit;
//Set the number of images to draw depenadant on the distance between the two nodes
lines = ceil(point_distance(source.x, source.y, global.playership[targetmid].x, global.playership[targetmid].y)/64);
//Set the direction to the node
dir = point_direction(source.x, source.y, global.playership[targetmid].x, global.playership[targetmid].y);
//Set the scale value so that all images are drawn the same
scale = (point_distance(source.x, source.y, global.playership[targetmid].x, global.playership[targetmid].y)/64)/lines;
for(i = 1; i &lt;= lines; i += 1)
{
 draw_sprite_ext(spr_sparkline_line, -1, source.x+lengthdir_x(64*scale*(i-1), dir), source.y+lengthdir_y(64*scale*(i-1), dir), scale, 1, dir, c_white, 0.8);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
