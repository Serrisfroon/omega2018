<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Show only this image
image_single = 1;
//Create this object invisible
image_alpha = 0;
text_alpha = 0;
//Initialize stage variable
cancel = 0;
textcancel = 0;
//Initialize creation check
creategamenow = 0;
askagain = 0;
retry  = 0;
boxx = x;
boxy = y;
alarm[0] = 115;
showtext = "Welcome to Practice Mode. What you see here is very much what you will see when playing a normal match.";            
activate = 0;
textnumber = 1;
sprite_index = spr_tutorialbox;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_delete(image);
instance_activate_all();
global.tutorial = 0;
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scaling = obj_mod.scaling;
activate = 1;
freezex = view_xview[0];
freezey = view_yview[0];
screen_save("freeze.bmp");
image = sprite_add("freeze.bmp", 1, 0, 0, 0 ,0);
instance_deactivate_all(1);
background_hspeed[0]=0;
background_hspeed[1]=0;
background_hspeed[2]=0;
background_hspeed[3]=0;
background_hspeed[4]=0;
background_hspeed[5]=0;
background_hspeed[6]=0;
boxx =  view_xview[0] + 261*scaling;
boxy =  view_yview[0] + view_hview[0]/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(activate = 0)
    exit;
//Make the popup appear
if(image_alpha &lt; 1 &amp;&amp; cancel = 0)
 image_alpha += 0.2;
//Make the popup disappear when the button is pressed
if(image_alpha &gt; 0 &amp;&amp; cancel = 1)
 image_alpha -= 0.2;
//Make the text appear
if(text_alpha &lt; 1 &amp;&amp; textcancel = 0)
 text_alpha += 0.2;
//Make the text disappear when the button is pressed
if(text_alpha &gt; 0 &amp;&amp; textcancel = 1)
 text_alpha -= 0.2;


//check if the popup has fully disappeared
if(text_alpha = 0 &amp;&amp; textcancel = 1)
{
        textcancel = 0;
        textnumber += 1;   
        switch(textnumber)
        {
            case 2:
                showtext = "Before letting you try out the weapons, let's take a look at the gauges at the top-left of the screen.";            
            break;
            case 3:
                showtext = "These gauages will give you all the information you need on your ship when playing.";            
            break;
            case 4:
                showtext = "The large red-to-green bar is the ship's armor. When you get hit by enemy attacks, it goes down. When it runs out, you die.";            
            break;
            case 5:
                showtext = "As it gets low, you will begin smoking more and more. Other players will see this as well.";            
            break;
            case 6:
                showtext = "Covering the armor bar is the shield bar. It will take damage before your armor does, but is weaker.";            
            break;
            case 7:
                showtext = "After not taking damage for so long, it will start regenerating. Avoid fights when you have no shield.";            
            break;
            case 8:
                showtext = "The navy bar below these two bars is the energy bar. It decreases as you use Energy Secondaries.";            
            break;
            case 9:
                showtext = "It will also turn red as you use your primary. If it turns completely red, you will overheat for a few seconds, disabling your primary.";            
            break;
            case 10:
                showtext = "As long as you're not overheated, this bar refills pretty quickly.";            
            break;
            case 11:
                showtext = "The yellow bar below the energy bar is the deploy bar. It shows how many remaining stock the currently selected deploy has.";            
            break;
            case 12:
                showtext = "This is also shown below each deploy secondary weapon icon.";            
            break;
            case 13:
                showtext = "Below the gauges are icons of your equipped weapons. The glowing icon is your currently selected weapon.";            
            break;
            case 14:
                showtext = "These icons will dim out when unavailable to use and flash when available again.";            
            break;
            case 15:
                showtext = "Some weapons are only available when locked on to a target. Lock-on is automatic- the enemy closest to the cursor will be locked on when on screen.";            
            break;
            case 16:
                showtext = "You'll also notice your radar in the top-right of the screen. It shows you where enemies are in relation to you.";                          
            break;
            case 17:
                showtext = "Now, let's look at controls.";                          
            break;
            case 18:
                showtext = "The window to the right explains a majority of the game's controls. There are a few less curicial controls as well.";                          
            break;
            case 19:
                showtext = "F4 will put the game in full-screen(or back into windowed mode). Enter will allow you to chat in a normal match.";                                      
            break;
            case 20:
                showtext = "Holding Tab will show the score window. While in practice mode, it will show this control help window.";                          
            break;
            case 21:
                showtext = "Let's go ahead and close the control window. There's one last thing to mention now.";                          
            break;
            case 22:
                showtext = "When you die in a normal match, a tab will appear at the bottom of the screen, which will allow you to switch weapons.";                          
            break;
            case 23:
                showtext = "Clicking it will let you select a weapon slot you want to change, and clicking one will let you select a weapon to replace it with.";                          
            break;
            case 24:
                showtext = "You can only replace one weapon per death, but it can come in handy a lot.";                          
            break;
            case 25:
                showtext = "That about covers everything. You're free to test out the weapons currently equipped now.";                          
            break;
            case 26:
                showtext = "When you're ready to try a real match, press Escape to exit Practice mode.";                          
            break;
            case 27:
                showtext = "If you need any more help, you can view the guide from the main menu. Good lock and please enjoy Operation Omega.";                          
            break;
            case 28:
                textcancel = 1;
                cancel = 1;
                alarm[2] = 2;
                showtext = "";                          
            break;

        }     
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(textcancel = 1 || text_alpha != 1 || showtext = "")
    exit;
textcancel = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(activate = 0)
    exit;
global.rot1 += 2.5*global.framerate;
global.rot2 -= 4*global.framerate;
global.rot3 += 6*global.framerate;
draw_sprite_ext(image, 0, freezex, freezey, scaling, scaling, 0, c_white, 1);
draw_set_alpha(0.6);
        switch(textnumber)
        {
            case 4:
            case 5:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_armorbar, 0, freezex, freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 6:
            case 7:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_shieldbar, 0, freezex, freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 8:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_energybar, 0, freezex, freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 9:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_energybar, 1, freezex, freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 10:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_energybar, 0, freezex, freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 11:
            case 12:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_ammobar, 4, freezex, freezey, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(spr_deploybar, 0, freezex+64*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(spr_deploybar, 0, freezex+96*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
            break;
            case 13:
            case 14:
            case 15:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(global.esecondimage[1], 0, freezex, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(spr_numbers_selected, 0, freezex, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(global.esecondimage[2], 0, freezex+32*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(spr_numbers_icon, 5, freezex+32*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(global.deployimage[1], 0, freezex+64*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
                draw_sprite_ext(global.deployimage[2], 0, freezex+96*scaling, freezey+72*scaling, scaling, scaling, 0, c_white, 1);
            break;
            case 16:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_radar, 0, freezex+view_wview[0], freezey, scaling, scaling, 0, c_white, 1);
            break;
            case 17:
            case 18:
            case 19:
            case 20:
                draw_sprite_ext(spr_controlwindow, 0, freezex+view_wview[0], freezey+view_hview[0], scaling, scaling, 0, c_white, 1);            
            break;
            case 22:
            case 23:
            case 24:
                draw_rectangle(freezex, freezey, freezex + view_wview[0], freezey + view_hview[0], 0)
                draw_sprite_ext(spr_weaponswitch_box, 0, freezex+view_wview[0]/2, freezey+view_hview[0]+80*scaling, scaling, scaling, 0, c_white, 1);
            break;        
        }     


draw_set_font(fnt_digital);
//Draw the popup
draw_sprite_ext(sprite_index, 0, boxx, boxy, scaling, scaling, 0, c_white, image_alpha);
draw_set_color(c_black);
//Draw the entered text
draw_set_alpha(min(text_alpha, image_alpha));
draw_text_ext_transformed(boxx-142*scaling, boxy-52*scaling, showtext, -1, 280, scaling, scaling, 0);
draw_set_alpha(1);
draw_sprite_ext(spr_cursor,0,mouse_x,mouse_y,scaling*0.7,scaling*0.7,global.rot1,c_white,0.7);
draw_sprite_ext(spr_cursor,1,mouse_x,mouse_y,scaling*0.7,scaling*0.7,global.rot2,c_white,0.7);
draw_sprite_ext(spr_cursor,2,mouse_x,mouse_y,scaling*0.7,scaling*0.7,global.rot3,c_white,0.7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(string_length(keyboard_string) &lt; 3 || cancel = 1)
    exit;
cancel = 1;
global.myname = keyboard_string;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
